{"version":3,"file":"static/webpack/static/development/pages/profile.js.4839cd1477c8df5f2a58.hot-update.js","sources":["webpack:///./components/profile/contactInformation.js"],"sourcesContent":["import React, { useState,useEffect, useContext } from 'react'\n\nimport { ProfileContext } from '../../store/contexts/profileContext'\n\nimport Navbar from '../layouts/navbar'\n\n\nimport '../../public/assets/style.scss';\nimport Logout from '../../utility/logout'\nimport checkInLocalStorage from '../componentUtility/persistLocalToState';\nimport axiosFuncs from '../../utility/axios';\n\nimport Validator from 'validatorjs';\nimport Cookie from 'js-cookie'\nimport jwtFuncs from '../../utility/jwt';\nimport composeApiData from '../componentUtility/composeApiData';\n\n\n//import localStorageFuncs from '../../../utility/localStorage'\n\n\n\n //   const cropper = React.createRef(null);\n\nconst ContactInformation = (props) => {\n\n\n  //console.log(\"this is the passed in props +\"+JSON.stringify(props));\n // console.log(\"this is the passed in props -\"+props.stepremove);\n\n//const coVal = Cookie.get(\"auth\");\n \n// const profileStep = (cookie) => {\n//     return cookie ? jwtFuncs.jwtProfileStep(cookie) : 1 \n//  }\n\n//const sessionProStep = profileStep(coVal);\n\n//console.log(\"the pro step \"+sessionProStep);\n\n\n\n const { dispatch  } = useContext(ProfileContext);\n\n//  const checkInLocalStorage = (val) => {\n\n//   const getLocalItem = localStorageFuncs.getItemFromStorage(\"profile\");\n//   const localStorageValue = getLocalItem[\"contactInformation\"][val]\n\n//   console.log(\" i have to trouble shoot from here \"+localStorageValue);\n\n//   if(localStorageValue !== undefined){\n//   //  console.log(\"there is a value   -->>\"+localValue);\n//     return localStorageValue\n//   }else{\n//     return ''\n//   }\n// }\n\n\n const [contactInformation, setContactInformation] = useState(\n              {\n                // prevProfileStep:1,\n                // nextProfileStep:3,\n                profileStep:2,\n                stateOfOrigin: checkInLocalStorage(\"contactInformation\",\"stateOfOrigin\"),\n                lga: checkInLocalStorage(\"contactInformation\", \"lga\"),\n                address: checkInLocalStorage(\"contactInformation\", \"address\"),\n                controlNumber: checkInLocalStorage(\"contactInformation\",\"controlNumber\"),\n                mobileNumber: checkInLocalStorage(\"contactInformation\",\"mobileNumber\"),\n\n\n              })\n\n\nconst [buttonStateF, setButtonStateF] = useState(true);\nconst [buttonStateB, setButtonStateB] = useState(false);\n                 \nlet rules = {\n\n  stateOfOrigin: 'required',\n  lga: 'required',\n  address: 'required',\n  mobileNumber: 'required',\n\n//  email: 'required|email',\n//  age: 'min:18'\n};\n \nlet validation = new Validator(contactInformation, rules, { required: 'required*' });\n\nvalidation.fails(); // true\nvalidation.passes(); // false\n\n\n\nuseEffect(() => {\n\n          if (validation.passes()) {\n                  setButtonStateF(false);\n                 // console.log(\"the   buttonStete \"+buttonState);  \n             }else{\n              setButtonStateF(true);\n            \n         }\n    },[contactInformation]);\n\n// useEffect(() => {\n\n//       if (contactInformation.profileStep === sessionProStep ) {\n//               setButtonStateB(true);\n//             //  console.log(\"the   buttonStete \"+contactInformation.profileStep);  \n//          }else{\n//               setButtonStateB(false);\n        \n//      }\n// });\n\n\n// const updateState = () =>{\n\n//   console.log(\"i have reached this place for the user effct\")\n\n// }\n\n//   useEffect(updateState, []);\n\nconst  handleChange =(e) => {\n                e.preventDefault(); \n                setContactInformation({ ...contactInformation, [e.target.id]: e.target.value })\n            \n              }\n\n\nconst handleForward = async e => {\n\n    e.preventDefault();\n //   dispatch({type: 'ADD_PROFILE_DATA', payload: contactInformation});\n  if (validation.passes()) { \n      dispatch({type: 'ADD_PROFILE_DATA', payload: {contactInformation: contactInformation}});\n      const next = \"F\"\n      const go = await props.updatestep(next);\n      dispatch({type: 'CURRENT_STEP', payload: contactInformation.profileStep+1});\n      if(go){\n        return go\n      }\n    }\n\n}\n\nconst handleBack = async e => {\n\n    e.preventDefault();\n\n    const next = \"B\"\n    const go = await props.updatestep(next);\n    dispatch({type: 'CURRENT_STEP', payload: contactInformation.profileStep-1});\n    if(go){\n  \n      return go\n    }\n  \n}\n\n\nconst handleSaveNow = async e => {\n\n\n  //  console.log(\"i am here to save first foitiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\n  \n    e.preventDefault();\n  //  const data = {...commonData, ...uniqueData};\n\n   // setContactInformation({ ...contactInformation, profileStep: 3 });\n\n   //console.log(\"the neww contact details J \"+JSON.stringify(contactInformation));\n\n    const data = {...contactInformation,  profileStep: contactInformation.profileStep+1};\n   // console.log(\"the neww contact details JJ \"+JSON.stringify(data));\n\n   if (validation.passes()) {  \n     const dataToPost = composeApiData.composeFullProfileData(data);\n    let api = await axiosFuncs.profilePost(dataToPost);\n    if(api.data === \"error\" ){\n      console.log(\"the log is error\");\n    }\n    if (api.data === \"success\") {\n      console.log(\"the log is success\"+api.status);\n\n      // router.push('/account')\n      dispatch({type: 'CLEAR_CONTEXT'});\n      Logout();\n    \n    }\n  }else{\n    dispatch({type: 'CLEAR_CONTEXT'});\n    Logout();\n  }\n \n\n    //logout();\n  \n  }\n\n\n\n// const persistToLocalStorage = () => {\n\n//   const getLocalItem = localStorageFuncs.getItemFromStorage(\"profile\");\n\n//   if(getLocalItem !== undefined){\n\n \n\n//   }else{\n\n//    // console.log(\"i=the local storage is empty make i put something insidehinixdopd\")\n//   //  const newData = {...getLocalItem, personalDetails };\n//     const setLocalItem = localStorageFuncs.setItemInStorage(\"profile\", contactInformation);\n\n//     return setLocalItem;\n\n//   }\n\n// }\n\n\n\n\n// useEffect(() => {\n//   // set local storage\n\n//   //console.log(\"this is the use effect running up and downnnnnnn   nooooooooooooowwwwwwwwwwww\")\n//  // dispatch({type: 'CLEAR_DATA'});\n\n//   persistToLocalStorage();\n//   // persistToState();\n//   // checkLocalStorage(\"firstName\");\n// })\n\n\n  \n\n\n\n\n  return (\n\n     <div className=\"pagegrid\">\n      <Navbar />\n\n        <div className=\"innergrid\">\n\n            <div className=\"profile-form\" >\n\n            <h3>Contact Information</h3>\n\n            <div className=\"two-column-row\">\n                      <div className=\"column\">                  \n                          <label htmlFor=\"stateOfOrigin\">State Of Origin  <span className=\"fieldError\">{validation.errors.get(\"stateOfOrigin\")}</span></label>\n                          <select id=\"stateOfOrigin\" onChange={handleChange} value={contactInformation.stateOfOrigin}>\n                              <option value=\"\" />\n                              <option value={\"NIGER\"}>NIGER</option>\n                          </select>\n                      </div>\n                      <div className=\"column\">\n                          <label htmlFor=\"lga\">LGA   <span className=\"fieldError\">{validation.errors.get(\"lga\")}</span></label>\n                          <select id=\"lga\" onChange={handleChange} value={contactInformation.lga} >\n                              <option value=\"\" />\n                              <option value={\"DELTA\"}>DELTA</option>\n                              <option value={\"KANO\"}>KANO</option>\n                              <option value={\"RIVERS\"}>RIVERS</option>\n                          </select>\n                      </div>\n            </div>\n\n            <div className=\"two-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"controlNumber\">Address   <span className=\"fieldError\">{validation.errors.get(\"controlNumber\")}</span></label>               \n                    <input id=\"controlNumber\"  onChange={handleChange} value={contactInformation.controlNumber} />                 \n                  </div>\n                  <div className=\"column\">\n                    <label htmlFor=\"mobileNumber\">Mobile Number   <span className=\"fieldError\">{validation.errors.get(\"mobileNumber\")}</span></label>\n                    <input id=\"mobileNumber\"  onChange={handleChange} value={contactInformation.mobileNumber} />    \n                  </div>\n            </div>\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"address\">Address   <span className=\"fieldError\">{validation.errors.get(\"address\")}</span></label>               \n                    <textarea id=\"address\" onChange={handleChange} value={contactInformation.address}></textarea>               \n                  </div>\n           \n            </div>\n\n      \n\n            <div className=\"two-column-row\">\n                      <div className=\"column\">\n                         <button variant=\"outlined\"   size=\"small\" color=\"primary\" disabled={buttonStateB} onClick={handleBack}>\tBack </button>\n                      </div>\n                      {/* <div className=\"column\">\n                         <button  size=\"small\" color=\"primary\"  onClick={handleSaveNow}>Save And Logout</button>\n                      </div> */}\n                      <div className=\"column\">\n                         <button size=\"small\" color=\"primary\" disabled={buttonStateF} onClick={handleForward}>Next</button>\n                      </div>\n                  </div>\n\n\n                  <div className=\"one-column-row\">\n                      <div className=\"column componentFooter\">\n                         <span>2/6</span>\n                      </div>\n                  </div>\n            </div>\n\n        </div>\n    </div>\n\n\n\n      \n  )\n}\n\n\nexport default ContactInformation;\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAdA;AAAA;AAsBA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AArCA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAqDA;AAEA;AACA;AACA;AACA;AAGA;AACA;AATA;AAWA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAJA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAGA;AAEA;AACA;AACA;AAAA;AAZA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAeA;AAhBA;AAAA;AACA;AADA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AA7BA;AAAA;AACA;AADA;AA8BA;AAAA;AAAA;AACA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAEA;;;;A","sourceRoot":""}