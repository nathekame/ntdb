{"version":3,"file":"static/webpack/static/development/pages/profile.js.199a4283ecda7e2dfe81.hot-update.js","sources":["webpack:///./components/profile/bioInformation.js"],"sourcesContent":["import React, { useState,useEffect, useContext } from 'react'\n\nimport moment from 'moment'\n\n\nimport Cookie from 'js-cookie'\n\nimport { ProfileContext } from '../../store/contexts/profileContext'\nimport jwtFuncs from '../../utility/jwt'\n\nimport localStorageFuncs from '../../utility/localStorage'\nimport logout from '../../utility/logout';\n\nimport Navbar from '../layouts/navbar'\n\nimport '../../public/assets/style.scss';\nimport Logout from '../../utility/logout'\nimport checkInLocalStorage from '../componentUtility/persistLocalToState'\nimport axiosFuncs from '../../utility/axios'\n\nimport Validator from 'validatorjs';\n\n\n //   const cropper = React.createRef(null);\n\n//  const buttonStyle = {\n//   backgroundColor: 'blue',\n//  // backgroundImage: 'url(' + imgUrl + ')',\n// };\n\n\n\n\nconst BioInformation = (props) => {\n\n // console.log(\"this is the passed in props +\"+JSON.stringify(props));\n\n\n  //const localCookie = Cookie.get('auth'); \n\n  //console.log(\"this is the local cookie from Bio Information       nnnnnn    ----->>>>>>>>>>>>> \"+localCookie);\n\n\n  const { dispatch } = useContext(ProfileContext);\n\n  const currentProfile = useContext(ProfileContext);\n\n  const profileValue = currentProfile.profile.bioInformation;\n\n//   const bioInformation = (val) => {\n\n//       if(val === undefined){\n//           return\n//       }else{\n//         return val\n//       }\n//     }\n\n  console.log(\"this is the current contect =============>>>>>>>>>>> \"+JSON.stringify(currentProfile));\n\n // console.log(\"this is the current contect =============>>>>>>>>>>> \"+currentProfile.profile.bioInformation.firstName);\n\n// const checkInLocalStorage = (val) => {\n\n//   const getLocalItem = localStorageFuncs.getItemFromStorage(\"profile\");\n//   const localStorageValue = getLocalItem.bioInformation[val]\n\n//   if(localStorageValue !== undefined){\n//   //  console.log(\"there is a value   -->>\"+localValue);\n//     return localStorageValue\n//   }else{\n//     return ''\n//   }\n// }\n\n\n  const [bioInformation, setBioInformation] = useState(\n          {\n          //  nextProfileStep: 2,\n            profileStep:1,\n            firstName: checkInLocalStorage(\"bioInformation\",\"firstName\"),\n            otherName: checkInLocalStorage(\"bioInformation\",\"otherName\"),\n            lastName: checkInLocalStorage(\"bioInformation\",\"lastName\"),\n            gender: checkInLocalStorage(\"bioInformation\",\"gender\"),\n            dob :  checkInLocalStorage(\"bioInformation\",\"dob\"),\n            placeOfBirth: checkInLocalStorage(\"bioInformation\",\"placeOfBirth\"),\n          \n          \n          }\n);\n\nconst [buttonState, setButtonState] = useState(true);\n\n                 \nlet rules = {\n\n  firstName: 'required',\n  // otherName: 'required|email',\n  lastName: 'required',\n  gender: 'required',\n  dob :  'required',\n  placeOfBirth: 'required',\n \n//  email: 'required|email',\n//  age: 'min:18'\n};\n \nlet validation = new Validator(bioInformation, rules, { required: 'required*' });\n\nvalidation.fails(); // true\nvalidation.passes(); // false\n \n\n// if (validation.fails()) {\n//   console.log(\"the validation has failed thats why u see this \"+validation.errors.get(\"firstNameame\"));\n\n//   // Error messages\n// validation.errors.first('email'); // 'The email format is invalid.'\n// validation.errors.get('email');\n\n// }\n\n\n\nuseEffect(() => {\n\n\n    if (validation.passes()) {\n      setButtonState(false);\n     // console.log(\"the   buttonStete \"+buttonState);  \n    }else{\n      setButtonState(true);\n\n    }\n},[bioInformation]);\n\n\n\n\n\n\n const handleDateChange = date => {\n    //setSelectedDate(date);\n    setBioInformation({ ...bioInformation, dob: moment(date).format('YYYY-MM-DD') })\n\n  };\n\n  const  handleChange =(e) => {\n    e.preventDefault(); \n    setBioInformation({ ...bioInformation, [e.target.id]: e.target.value })\n\n  }\n\n const handleForward = async e => {\n\n    e.preventDefault();\n\n    if (validation.passes()) {    \n      dispatch({type: 'ADD_PROFILE_DATA', payload: {bioInformation: bioInformation}}); \n      const next = \"F\";\n      const go = await props.updatestep(next);\n      dispatch({type: 'CURRENT_STEP', payload: bioInformation.profileStep+1});\n      if(go){     \n      //  console.log(\"all has gone well with the profile update from the props--->>>> \"+props.currentStep);\n        return go\n      }\n      \n    }\n\n  \n\n\n}\n\n\nconst handleSaveNow = async e => {\n\n  e.preventDefault();\n\n // setBioInformation({ ...bioInformation, profileStep: bioInformation.profileStep+1 });\n\n  const data =  {...bioInformation,  profileStep: bioInformation.profileStep+1};\n\n  console.log(\"the data  \"+ JSON.stringify(bioInformation));\n\n  if (validation.passes()) {  \n      let api = await axiosFuncs.profilePost(data);\n      if(api.data === \"error\" ){\n        console.log(\"the log is error\");\n      }\n      if (api.data === \"success\") {\n        console.log(\"the log is success\"+api.status);\n        // router.push('/account')\n      }\n      dispatch({type: 'CLEAR_CONTEXT'});\n      Logout();\n\n  }else{\n    dispatch({type: 'CLEAR_CONTEXT'});\n    Logout();\n  }\n \n\n\n  \n\n // props.createProfile(props.stateData);\n \n\n//  logout();\n\n}\n\n\n\n\nconst persistToLocalStorage = () => {\n\n  const getLocalItem = localStorageFuncs.getItemFromStorage(\"profile\");\n\n  if(getLocalItem !== undefined){\n\n \n\n  }else{\n\n   // console.log(\"i=the local storage is empty make i put something insidehinixdopd\")\n  //  const newData = {...getLocalItem, bioInformation };\n    const setLocalItem = localStorageFuncs.setItemInStorage(\"profile\", bioInformation);\n\n    return setLocalItem;\n\n  }\n\n}\n\n\n\n\nuseEffect(() => {\n  // set local storage\n\n  //console.log(\"this is the use effect running up and downnnnnnn   nooooooooooooowwwwwwwwwwww\")\n // dispatch({type: 'CLEAR_DATA'});\n\n  persistToLocalStorage();\n  // persistToState();\n  // checkLocalStorage(\"firstName\");\n})\n\n\n\n  return (\n\n    <div className=\"pagegrid\">\n      \n    <Navbar />\n        <div className=\"innergrid\">\n\n            <div className=\"profile-form\" >\n\n                  <h3>Bio Information </h3>\n\n                  <div className=\"three-column-row\">\n                    \n                        <div className=\"column\">\n                        \n                          <label htmlFor=\"firstName\">First Name  <span className=\"fieldError\">{validation.errors.get(\"firstName\")}</span></label> \n                          <input className=\"firstName\" id=\"firstName\" onChange={handleChange}  value={bioInformation.firstName} />\n                \n                        </div> \n                        <div className=\"column\">\n                          <label htmlFor=\"otherName\">Other Name </label>\n                          <input id=\"otherName\" onChange={handleChange} value={bioInformation.otherName}  />\n                         \n                        </div> \n                        <div className=\"column\">\n                          <label htmlFor=\"lastName\">Last Name  <span className=\"fieldError\">{validation.errors.get(\"lastName\")}</span></label>\n                          <input id=\"lastName\" onChange={handleChange} value={bioInformation.lastName}  />\n                         \n                        </div>\n                   \n                  </div>\n\n                  <div className=\"three-column-row\">\n                      <div className=\"column\">\n                          <label htmlFor=\"gender\">Gender  <span className=\"fieldError\">{validation.errors.get(\"gender\")}</span></label>\n                          <select id=\"gender\" onChange={handleChange} value={bioInformation.gender}  >\n                              <option value=\"\" />\n                              <option value={\"Male\"}>Male</option>\n                              <option value={\"Female\"}>Female</option>\n                          </select>\n                      </div>\n                      <div className=\"column\">\n                          <label htmlFor=\"dob\">Date Of Birth  <span className=\"fieldError\">{validation.errors.get(\"dob\")}</span></label>\n                          <input id=\"dob\" type=\"date\" onChange={handleDateChange} value={bioInformation.dob}  />\n                      </div>\n                      <div className=\"column\">\n                          <label htmlFor=\"placeOfBirth\">Place Of Birth  <span className=\"fieldError\">{validation.errors.get(\"placeOfBirth\")}</span></label>\n                          <input id=\"placeOfBirth\" onChange={handleChange} value={bioInformation.placeOfBirth}  />\n                      </div>\n                  </div>\n\n                  \n\n                  <div className=\"one-column-row\">\n                     \n                      <div className=\"column\">\n                         <button size=\"small\" color=\"primary\" disabled={buttonState} onClick={handleForward}>Next</button>\n                      </div>\n                  </div>\n\n                  <div className=\"one-column-row\">\n                      <div className=\"column componentFooter\">\n                         <span>1/6</span>\n                      </div>\n                  </div>\n\n              </div>\n\n              </div>\n              \n     \n\n    </div>\n\n\n  )\n}\n\n\nexport default BioInformation;\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAGA;AAEA;AAPA;AAAA;AACA;AAWA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AA5CA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AA4DA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAXA;AAaA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AACA;AADA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AAAA;AANA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AACA;AADA;AAuBA;AAAA;AAAA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAwcA;AACA;AAEA;;;;A","sourceRoot":""}