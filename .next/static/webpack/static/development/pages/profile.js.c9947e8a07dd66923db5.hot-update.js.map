{"version":3,"file":"static/webpack/static/development/pages/profile.js.c9947e8a07dd66923db5.hot-update.js","sources":["webpack:///./components/profile/paymentInformation.js"],"sourcesContent":["import React, { useState,useEffect, useContext } from 'react'\n\nimport { ProfileContext } from '../../store/contexts/profileContext'\n\nimport Navbar from '../layouts/navbar'\n\nimport '../../public/assets/style.scss';\nimport Logout from '../../utility/logout'\nimport checkInLocalStorage from '../componentUtility/persistLocalToState';\nimport axiosFuncs from '../../utility/axios';\n\nimport Validator from 'validatorjs';\nimport Cookie from 'js-cookie'\nimport jwtFuncs from '../../utility/jwt';\nimport composeApiData from '../componentUtility/composeApiData';\n\n\n //   const cropper = React.createRef(null);\n\nconst PaymentInformation = (props) => {\n\n//   const coVal = Cookie.get(\"auth\");\n \n//   const profileStep = (cookie) => {\n//       return cookie ? jwtFuncs.jwtProfileStep(cookie) : 1 \n//   }\n\n//   const sessionProStep = profileStep(coVal);\n\n\n\n\n\n\n const { dispatch } = useContext(ProfileContext);\n\n\n const [paymentInformation, setPaymentInformation] = useState(\n              {\n                // prevProfileStep:3,\n                // nextProfileStep:5,\n                profileStep:5,\n                bankName: checkInLocalStorage(\"paymentInformation\", \"bankName\"),\n                accountName:checkInLocalStorage(\"paymentInformation\", \"accountName\"),\n                accountNumber:checkInLocalStorage(\"paymentInformation\", \"accountNumber\"),\n                bvn: checkInLocalStorage(\"paymentInformation\", \"bvn\")\n \n\n              })\n\n\n\n  const [buttonStateF, setButtonStateF] = useState(true);\n  const [buttonStateB, setButtonStateB] = useState(false);\n                  \n  let rules = {\n\n    bankName: 'required',\n    accountName: 'required',\n    accountNumber: 'required',\n    bvn: 'required',\n   \n\n  //  email: 'required|email',\n  //  age: 'min:18'\n  };\n  \n  let validation = new Validator(paymentInformation, rules, { required: 'required*' });\n\n  validation.fails(); // true\n  validation.passes(); // false\n\n\n\n  useEffect(() => {\n\n            if (validation.passes()) {\n                    setButtonStateF(false);\n                  // console.log(\"the   buttonStete \"+buttonState);  \n              }else{\n                setButtonStateF(true);\n              \n          }\n      },[paymentInformation]);\n\n//   useEffect(() => {\n\n//         if (paymentInformation.profileStep === sessionProStep ) {\n//                 setButtonStateB(true);\n//               //  console.log(\"the   buttonStete \"+paymentInformation.profileStep);  \n//           }else{\n//                 setButtonStateB(false);\n          \n//       }\n//   });\n\n\nconst  handleChange =(e) => {\n                e.preventDefault(); \n                setPaymentInformation({ ...paymentInformation, [e.target.id]: e.target.value })\n            \n              }\n\n\nconst handleForward = async e => {\n\n   e.preventDefault();\n  //   dispatch({type: 'ADD_PROFILE_DATA', payload: paymentInformation});\n  if (validation.passes()) { \n     dispatch({type: 'ADD_PROFILE_DATA', payload: {paymentInformation: paymentInformation}});\n  \n     const next = \"F\"\n     const go = await props.updatestep(next);\n     dispatch({type: 'CURRENT_STEP', payload: paymentInformation.profileStep+1});\n     if(go){\n       return go\n     }\n  }\n \n\n}\n\nconst handleBack = e => {\n\n    e.preventDefault();\n\n    const next = \"B\"\n    const go = props.updatestep(next);\n    dispatch({type: 'CURRENT_STEP', payload: paymentInformation.profileStep-1});\n    if(go){\n\n      return go\n    }\n\n\n  \n}\n\n\nconst handleSaveNow = async e => {\n\n\n  //  console.log(\"i am here to save first foitiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\n  \n  e.preventDefault();\n  \n  const data =  {...paymentInformation,  profileStep: paymentInformation.profileStep+1};\n\n    \n  if (validation.passes()) {  \n      const dataToPost = composeApiData.composeFullProfileData(data);\n        let api = await axiosFuncs.profilePost(dataToPost);\n        if(api.data === \"error\" ){\n          console.log(\"the log is error\");\n        }\n        if (api.data === \"success\") {\n          console.log(\"the log is success\"+api.status);\n\n          // router.push('/account')\n          dispatch({type: 'CLEAR_CONTEXT'});\n          Logout();\n          \n        }\n     }else{\n        dispatch({type: 'CLEAR_CONTEXT'});\n        Logout();\n      }\n    //logout();\n  \n  }\n  \n\n\n\n\n  return (\n\n\n\n    <div className=\"pagegrid\">\n      <Navbar />\n\n        <div className=\"innergrid\">\n\n            <div className=\"profile-form\" >\n\n            <h3>Payment Information</h3>\n\n            <div className=\"one-column-row\">\n                <div className=\"column\">\n                    <label htmlFor=\"bankName\">Bank Name <span className=\"fieldError\">{validation.errors.get(\"bankName\")}</span></label>\n                    <select id='bankName' onChange={handleChange} value={paymentInformation.bankName} >\n                        <option value=\"\" />\n                        <option value={\"UBA\"}>UBA</option>\n                        <option value={\"GTB\"}>GTB</option>\n                        <option value={\"FCMB\"}>FCMB</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"accountName\">Account Name   <span className=\"fieldError\">{validation.errors.get(\"accountName\")}</span></label>               \n                    <input id=\"accountName\" onChange={handleChange} value={paymentInformation.accountName} />         \n                  </div>\n            </div>\n\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"accountNumber\">Account Number   <span className=\"fieldError\">{validation.errors.get(\"accountNumber\")}</span></label>               \n                    <input id=\"accountNumber\" onChange={handleChange} value={paymentInformation.accountNumber}/>               \n                  </div>\n            </div>\n\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"bvn\">Bank Verification Number(bvn)   <span className=\"fieldError\">{validation.errors.get(\"bvn\")}</span></label>               \n                    <input id=\"bvn\" onChange={handleChange} value={paymentInformation.bvn} />               \n                  </div>\n            </div>\n\n\n\n\n\n\n\n\n\n            <div className=\"two-column-row\">\n                      <div className=\"column\">\n                         <button disabled={buttonStateB}  size=\"small\" color=\"primary\" onClick={handleBack}>Back</button>\n                      </div>\n                  \n                      <div className=\"column\">\n                         <button disabled={buttonStateF} size=\"small\" color=\"primary\" onClick={handleForward}>Next</button>\n                      </div>\n                  </div>\n\n                  <div className=\"one-column-row\">\n                      <div className=\"column componentFooter\">\n                         <span>5/6</span>\n                      </div>\n                  </div>\n\n            </div>\n        </div>\n    </div>\n\n\n\n  )\n\n}\n\n\nexport default PaymentInformation;\n\n\n\n\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAEA;AARA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAmCA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAVA;AAYA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAPA;AAAA;AACA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AAAA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AAXA;AAAA;AACA;AADA;AAYA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAxBA;AAAA;AACA;AADA;AAyBA;AAAA;AAAA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmsourceRoot":""}