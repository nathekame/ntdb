{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config'; //import cookieFuncs from './cookies';\n\nimport Cookie from 'js-cookie';\n\nconst userRegister = async data => {\n  const url = config.apiUrl + \"register\";\n\n  try {\n    const postReq = await axios.post(url, data).then(function (response) {\n      // console.log(response);\n      // console.log(response.data);\n      console.log(response.status);\n      return response;\n    }).catch(function (error) {\n      console.log(\"this is the error that occurred \" + error); //return error\n\n      return;\n    });\n    return postReq;\n  } catch (error) {}\n};\n\nconst userLogin = async () => {\n  const options = {\n    withCredentials: true,\n    headers: {\n      'Authorization': `Bearer ${currentUserAuthToken}`\n    }\n  }; // Make a request for a user with a given ID\n\n  const url = config.apiUrl;\n  const res = await axios.get(url, options).then(function (response) {\n    // handle success\n    console.log(\"this is the response \" + response);\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n    return response;\n  }).catch(function (error) {\n    // //                                                               // handle error\n    console.log(\"this is the error \" + error); //   console.log(\"this is the error \"+response);\n\n    return null;\n  });\n  return res;\n};\n\nconst profilePost = async data => {\n  // console.log(\"this s the data that we want to put in the databasev  ooooooooooooooo \"+JSON.stringify(data));\n  // console.log(\"this is a test of the JNIJNIOI CONFIG \"+config.testEnv);\n  //   const cookies = cookieFuncs.getCookie();\n  const cookies = Cookie.get('auth'); //   const currentUserAuthToken = cookies.auth\n  //  console.log(\"this is thr current auto header for the post method of thee profile ooo ->>> \"+cookies);\n\n  const url = config.apiUrl + \"profile\";\n  const options = {\n    //  withCredentials: true,\n    headers: {\n      'Authorization': `Bearer ${cookies}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  try {\n    const postReq = await axios.post(url, data, options).then(function (response) {\n      // console.log(response);\n      // console.log(response.data);\n      console.log(response.status);\n      return response;\n    }).catch(function (error) {\n      console.log(\"this is the error that occurred \" + error); //return error\n\n      return;\n    }); //  console.log(\"this is the outcome of postRep \"+JSON.stringify(postReq));\n\n    return postReq;\n  } catch (error) {\n    console.log(\"an error occurd \" + error);\n  }\n}; // const setItemInStorage  = (key, value) => {\n//     const setLocalItem = localStorage.setItem(key, JSON.stringify(value));\n//     if(setLocalItem == true){\n//         return true\n//     }\n// }\n\n\nconst axiosFuncs = {\n  userRegister: userRegister,\n  userLogin: userLogin,\n  profilePost: profilePost // setItemInStorage : setItemInStorage\n  // end of the module export bracket\n\n};\nexport default axiosFuncs;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/utility/axios.js"],"names":["axios","config","Cookie","userRegister","data","url","apiUrl","postReq","post","then","response","console","log","status","catch","error","userLogin","options","withCredentials","headers","currentUserAuthToken","res","get","statusText","profilePost","cookies","axiosFuncs"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nimport config from '../config/config'\n//import cookieFuncs from './cookies';\n\nimport Cookie from 'js-cookie'\n\n\n\n\nconst userRegister = async (data) => {\n\n    const url = config.apiUrl+\"register\";\n    try {\n\n        const postReq = await axios.post(url, data).then(function (response) {\n            // console.log(response);\n            // console.log(response.data);\n             console.log(response.status);\n            return response;\n        }).catch(function(error){\n            console.log(\"this is the error that occurred \"+error);\n            //return error\n            return \n        })\n\n        return  postReq\n        \n    } catch (error) {\n        \n    }\n\n\n\n}\n\n\n\n\nconst userLogin = async () => {\n\n\n    const options = {\n        withCredentials: true,\n        headers: {\n          'Authorization': `Bearer ${currentUserAuthToken}`\n        }\n      } \n  \n          // Make a request for a user with a given ID\n     const url = config.apiUrl \n     const res =  await axios.get(url, options).then(function (response) {\n                                                                // handle success\n                                          console.log(\"this is the response \"+response);\n                                          console.log(response.data);\n                                           console.log(response.status);\n                                           console.log(response.statusText);\n                                           console.log(response.headers);\n                                           console.log(response.config);\n                                         return response\n\n                                       }).catch(function (error) {\n  // //                                                               // handle error\n                                                 console.log(\"this is the error \"+error);\n//   console.log(\"this is the error \"+response);\n\n                                                 return null\n\n                                                });\n\n\n            return res;\n\n}\n\n\nconst profilePost = async (data) => {\n   // console.log(\"this s the data that we want to put in the databasev  ooooooooooooooo \"+JSON.stringify(data));\n\n   // console.log(\"this is a test of the JNIJNIOI CONFIG \"+config.testEnv);\n\n     //   const cookies = cookieFuncs.getCookie();\n        const cookies = Cookie.get('auth')\n\n     //   const currentUserAuthToken = cookies.auth\n\n      //  console.log(\"this is thr current auto header for the post method of thee profile ooo ->>> \"+cookies);\n\n        const url = config.apiUrl+\"profile\"\n        const options = {\n              //  withCredentials: true,\n                headers: {\n              \n                'Authorization': `Bearer ${cookies}`,\n                'Content-Type':'multipart/form-data'\n                }\n            } \n\n\n        try {\n\n\n            const postReq = await axios.post(url, data, options).then(function (response) {\n                                                                // console.log(response);\n                                                                // console.log(response.data);\n                                                                 console.log(response.status);\n                                                                return response;\n                                                            }).catch(function(error){\n                                                                console.log(\"this is the error that occurred \"+error);\n                                                                //return error\n                                                                return \n                                                            })\n\n            //  console.log(\"this is the outcome of postRep \"+JSON.stringify(postReq));\n\n            return  postReq\n\n            \n        } catch (error) {\n\n            console.log(\"an error occurd \"+error);\n\n\n\n\n            \n        }\n\n                               \n    \n\n}\n\n\n// const setItemInStorage  = (key, value) => {\n\n//     const setLocalItem = localStorage.setItem(key, JSON.stringify(value));\n\n//     if(setLocalItem == true){\n//         return true\n//     }\n\n\n// }\n\n\n\n\n\n\nconst axiosFuncs = {\n\n    userRegister: userRegister,\n    userLogin: userLogin,\n    profilePost: profilePost\n   // setItemInStorage : setItemInStorage\n\n// end of the module export bracket\n} \n\n\n\nexport default axiosFuncs;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}