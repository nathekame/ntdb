{"ast":null,"code":"import jwt from 'jwt-decode'; // this takes two arguments first is the token second is the value requested\n\nvar jwtUID = function jwtUID(token) {\n  console.log(\"the NAV user token  \" + token);\n\n  if (token) {\n    var newTok = JSON.stringify(jwt(token).userID); //    console.log(\"this is the decoded from here ooo \" + newTok);\n\n    return newTok;\n  }\n};\n\nvar jwtEmail = function jwtEmail(token) {\n  console.log(\"the NAV user token  \" + token);\n\n  if (token) {\n    var newTok = JSON.stringify(jwt(token).email); //  console.log(\"this is the decoded from here ooo \" + newTok);\n\n    return newTok;\n  }\n};\n\nvar jwtRole = function jwtRole(token) {\n  console.log(\"the NAV user token  \" + token);\n\n  if (token) {\n    var newTok = JSON.stringify(jwt(token).role); // console.log(\"this is the decoded from here ooo \" + newTok);\n\n    return newTok;\n  }\n};\n\nvar jwtProfile = function jwtProfile(token) {\n  console.log(\"the NAV user token  \" + token);\n\n  if (token) {\n    var newTok = JSON.stringify(jwt(token).isProfileComplete); // console.log(\"this is the decoded from here ooo \" + newTok);\n\n    return newTok;\n  }\n};\n\nvar jwtProfileStep = function jwtProfileStep(token) {\n  // console.log(\"the toke i am using to fined the profiule step  \"+token);\n  if (token) {\n    var newTok = JSON.stringify(jwt(token).profileStep); //   console.log(\"this is the decoded profile step from the tokeno \" + newTok);\n    //  stripeMarks = (profileStepValue) => {\n\n    var profileStepString = newTok.replace(/\"/g, '');\n    var stepToReturn = Number(profileStepString); //    console.log(\"this is the decoded profile step from the tokeno After STRIIIPIN  \" + stepToReturn);\n    //   return profileStepString;\n    //  }\n    //  return newTok\n\n    return stepToReturn;\n  }\n};\n\nvar jwtFuncs = {\n  jwtUID: jwtUID,\n  jwtEmail: jwtEmail,\n  jwtRole: jwtRole,\n  jwtProfile: jwtProfile,\n  jwtProfileStep: jwtProfileStep // end of the module export bracket\n\n};\nexport default jwtFuncs;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/utility/jwt.js"],"names":["jwt","jwtUID","token","console","log","newTok","JSON","stringify","userID","jwtEmail","email","jwtRole","role","jwtProfile","isProfileComplete","jwtProfileStep","profileStep","profileStepString","replace","stepToReturn","Number","jwtFuncs"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB,C,CAGA;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBF,KAAnC;;AAEA,MAAGA,KAAH,EAAS;AACP,QAAMG,MAAM,GAAIC,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACE,KAAD,CAAH,CAAWM,MAA1B,CAAhB,CADO,CAGX;;AAGI,WAAOH,MAAP;AAED;AAMF,CAlBD;;AAoBA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACP,KAAD,EAAW;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBF,KAAnC;;AAEA,MAAGA,KAAH,EAAS;AACP,QAAMG,MAAM,GAAIC,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACE,KAAD,CAAH,CAAWQ,KAA1B,CAAhB,CADO,CAGT;;AAGE,WAAOL,MAAP;AAED;AAMJ,CAlBD;;AAqBA,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAACT,KAAD,EAAW;AAEzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBF,KAAnC;;AAEA,MAAGA,KAAH,EAAS;AAET,QAAMG,MAAM,GAAIC,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACE,KAAD,CAAH,CAAWU,IAA1B,CAAhB,CAFS,CAIV;;AAGG,WAAOP,MAAP;AAED;AAEF,CAfD;;AAkBA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACX,KAAD,EAAW;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBF,KAAnC;;AAEA,MAAGA,KAAH,EAAS;AAER,QAAMG,MAAM,GAAIC,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACE,KAAD,CAAH,CAAWY,iBAA1B,CAAhB,CAFQ,CAIT;;AAGE,WAAOT,MAAP;AAED;AAEF,CAfD;;AAkBA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACb,KAAD,EAAW;AAEjC;AAEC,MAAGA,KAAH,EAAS;AAER,QAAMG,MAAM,GAAIC,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACE,KAAD,CAAH,CAAWc,WAA1B,CAAhB,CAFQ,CAIX;AAEC;;AACG,QAAMC,iBAAiB,GAAGZ,MAAM,CAACa,OAAP,CAAe,IAAf,EAAqB,EAArB,CAA1B;AAEA,QAAMC,YAAY,GAAGC,MAAM,CAACH,iBAAD,CAA3B,CATO,CAWX;AAEC;AAEA;AAIC;;AACE,WAAOE,YAAP;AAED;AAEF,CA5BD;;AAiCA,IAAME,QAAQ,GAAG;AAEfpB,EAAAA,MAAM,EAAEA,MAFO;AAGfQ,EAAAA,QAAQ,EAAGA,QAHI;AAIfE,EAAAA,OAAO,EAAGA,OAJK;AAKfE,EAAAA,UAAU,EAAGA,UALE;AAMfE,EAAAA,cAAc,EAAEA,cAND,CAQjB;;AARiB,CAAjB;AAaA,eAAeM,QAAf","sourcesContent":["import jwt from 'jwt-decode';\n\n\n// this takes two arguments first is the token second is the value requested\n\n\nconst jwtUID = (token) => {\n\n  console.log(\"the NAV user token  \"+token);\n\n  if(token){\n    const newTok =  JSON.stringify(jwt(token).userID);\n\n//    console.log(\"this is the decoded from here ooo \" + newTok);\n\n\n    return newTok\n\n  }\n\n \n\n  \n\n}\n\nconst jwtEmail = (token) => {\n\n    console.log(\"the NAV user token  \"+token);\n\n    if(token){\n      const newTok =  JSON.stringify(jwt(token).email);\n\n    //  console.log(\"this is the decoded from here ooo \" + newTok);\n\n\n      return newTok\n\n    }\n\n   \n\n    \n\n}\n\n\nconst jwtRole = (token) => {\n\n  console.log(\"the NAV user token  \"+token);\n\n  if(token){\n\n  const newTok =  JSON.stringify(jwt(token).role);\n\n // console.log(\"this is the decoded from here ooo \" + newTok);\n\n\n    return newTok\n\n  }\n\n}\n\n\nconst jwtProfile = (token) => {\n\n  console.log(\"the NAV user token  \"+token);\n\n  if(token){\n\n   const newTok =  JSON.stringify(jwt(token).isProfileComplete);\n\n  // console.log(\"this is the decoded from here ooo \" + newTok);\n\n\n    return newTok\n\n  }\n\n}\n\n\nconst jwtProfileStep = (token) => {\n\n // console.log(\"the toke i am using to fined the profiule step  \"+token);\n\n  if(token){\n\n   const newTok =  JSON.stringify(jwt(token).profileStep);\n\n//   console.log(\"this is the decoded profile step from the tokeno \" + newTok);\n\n //  stripeMarks = (profileStepValue) => {\n    const profileStepString = newTok.replace(/\"/g, '');\n\n    const stepToReturn = Number(profileStepString);\n\n//    console.log(\"this is the decoded profile step from the tokeno After STRIIIPIN  \" + stepToReturn);\n\n //   return profileStepString;\n\n //  }\n\n\n\n  //  return newTok\n    return stepToReturn\n\n  }\n\n}\n\n\n\n\nconst jwtFuncs = {\n \n  jwtUID: jwtUID,\n  jwtEmail : jwtEmail,\n  jwtRole : jwtRole,\n  jwtProfile : jwtProfile,\n  jwtProfileStep: jwtProfileStep\n\n// end of the module export bracket\n} \n\n\n\nexport default jwtFuncs;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}