{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport config from '../config/config'; //import cookieFuncs from './cookies';\n\nimport Cookie from 'js-cookie';\n\nvar userRegister = function userRegister(data) {\n  var url, postReq;\n  return _regeneratorRuntime.async(function userRegister$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = config.apiUrl + \"register\";\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.post(url, data).then(function (response) {\n            // console.log(response);\n            // console.log(response.data);\n            console.log(response.status);\n            return response;\n          })[\"catch\"](function (error) {\n            console.log(\"this is the error that occurred \" + error); //return error\n\n            return;\n          }));\n\n        case 4:\n          postReq = _context.sent;\n          return _context.abrupt(\"return\", postReq);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\n\nvar userLogin = function userLogin() {\n  var options, url, res;\n  return _regeneratorRuntime.async(function userLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          options = {\n            withCredentials: true,\n            headers: {\n              'Authorization': \"Bearer \".concat(currentUserAuthToken)\n            }\n          }; // Make a request for a user with a given ID\n\n          url = config.apiUrl;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url, options).then(function (response) {\n            // handle success\n            console.log(\"this is the response \" + response);\n            console.log(response.data);\n            console.log(response.status);\n            console.log(response.statusText);\n            console.log(response.headers);\n            console.log(response.config);\n            return response;\n          })[\"catch\"](function (error) {\n            // //                                                               // handle error\n            console.log(\"this is the error \" + error); //   console.log(\"this is the error \"+response);\n\n            return null;\n          }));\n\n        case 4:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar profilePost = function profilePost(data) {\n  var cookies, url, options, postReq;\n  return _regeneratorRuntime.async(function profilePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          // console.log(\"this s the data that we want to put in the databasev  ooooooooooooooo \"+JSON.stringify(data));\n          // console.log(\"this is a test of the JNIJNIOI CONFIG \"+config.testEnv);\n          //   const cookies = cookieFuncs.getCookie();\n          cookies = Cookie.get('auth'); //   const currentUserAuthToken = cookies.auth\n          //  console.log(\"this is thr current auto header for the post method of thee profile ooo ->>> \"+cookies);\n\n          url = config.apiUrl + \"profile\";\n          options = {\n            //  withCredentials: true,\n            headers: {\n              'Authorization': \"Bearer \".concat(cookies),\n              'Content-Type': 'multipart/form-data'\n            }\n          };\n          _context3.prev = 3;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(axios.post(url, data, options).then(function (response) {\n            // console.log(response);\n            // console.log(response.data);\n            console.log(response.status);\n            return response;\n          })[\"catch\"](function (error) {\n            console.log(\"this is the error that occurred \" + error); //return error\n\n            return;\n          }));\n\n        case 6:\n          postReq = _context3.sent;\n          return _context3.abrupt(\"return\", postReq);\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](3);\n          console.log(\"an error occurd \" + _context3.t0);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[3, 10]], Promise);\n}; // const setItemInStorage  = (key, value) => {\n//     const setLocalItem = localStorage.setItem(key, JSON.stringify(value));\n//     if(setLocalItem == true){\n//         return true\n//     }\n// }\n\n\nvar axiosFuncs = {\n  userRegister: userRegister,\n  userLogin: userLogin,\n  profilePost: profilePost // setItemInStorage : setItemInStorage\n  // end of the module export bracket\n\n};\nexport default axiosFuncs;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/utility/axios.js"],"names":["axios","config","Cookie","userRegister","data","url","apiUrl","post","then","response","console","log","status","error","postReq","userLogin","options","withCredentials","headers","currentUserAuthToken","get","statusText","res","profilePost","cookies","axiosFuncs"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nimport config from '../config/config'\n//import cookieFuncs from './cookies';\n\nimport Cookie from 'js-cookie'\n\n\n\n\nconst userRegister = async (data) => {\n\n    const url = config.apiUrl+\"register\";\n    try {\n\n        const postReq = await axios.post(url, data).then(function (response) {\n            // console.log(response);\n            // console.log(response.data);\n             console.log(response.status);\n            return response;\n        }).catch(function(error){\n            console.log(\"this is the error that occurred \"+error);\n            //return error\n            return \n        })\n\n        return  postReq\n        \n    } catch (error) {\n        \n    }\n\n\n\n}\n\n\n\n\nconst userLogin = async () => {\n\n\n    const options = {\n        withCredentials: true,\n        headers: {\n          'Authorization': `Bearer ${currentUserAuthToken}`\n        }\n      } \n  \n          // Make a request for a user with a given ID\n     const url = config.apiUrl \n     const res =  await axios.get(url, options).then(function (response) {\n                                                                // handle success\n                                          console.log(\"this is the response \"+response);\n                                          console.log(response.data);\n                                           console.log(response.status);\n                                           console.log(response.statusText);\n                                           console.log(response.headers);\n                                           console.log(response.config);\n                                         return response\n\n                                       }).catch(function (error) {\n  // //                                                               // handle error\n                                                 console.log(\"this is the error \"+error);\n//   console.log(\"this is the error \"+response);\n\n                                                 return null\n\n                                                });\n\n\n            return res;\n\n}\n\n\nconst profilePost = async (data) => {\n   // console.log(\"this s the data that we want to put in the databasev  ooooooooooooooo \"+JSON.stringify(data));\n\n   // console.log(\"this is a test of the JNIJNIOI CONFIG \"+config.testEnv);\n\n     //   const cookies = cookieFuncs.getCookie();\n        const cookies = Cookie.get('auth')\n\n     //   const currentUserAuthToken = cookies.auth\n\n      //  console.log(\"this is thr current auto header for the post method of thee profile ooo ->>> \"+cookies);\n\n        const url = config.apiUrl+\"profile\"\n        const options = {\n              //  withCredentials: true,\n                headers: {\n              \n                'Authorization': `Bearer ${cookies}`,\n                'Content-Type':'multipart/form-data'\n                }\n            } \n\n\n        try {\n\n\n            const postReq = await axios.post(url, data, options).then(function (response) {\n                                                                // console.log(response);\n                                                                // console.log(response.data);\n                                                                 console.log(response.status);\n                                                                return response;\n                                                            }).catch(function(error){\n                                                                console.log(\"this is the error that occurred \"+error);\n                                                                //return error\n                                                                return \n                                                            })\n\n            //  console.log(\"this is the outcome of postRep \"+JSON.stringify(postReq));\n\n            return  postReq\n\n            \n        } catch (error) {\n\n            console.log(\"an error occurd \"+error);\n\n\n\n\n            \n        }\n\n                               \n    \n\n}\n\n\n// const setItemInStorage  = (key, value) => {\n\n//     const setLocalItem = localStorage.setItem(key, JSON.stringify(value));\n\n//     if(setLocalItem == true){\n//         return true\n//     }\n\n\n// }\n\n\n\n\n\n\nconst axiosFuncs = {\n\n    userRegister: userRegister,\n    userLogin: userLogin,\n    profilePost: profilePost\n   // setItemInStorage : setItemInStorage\n\n// end of the module export bracket\n} \n\n\n\nexport default axiosFuncs;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}