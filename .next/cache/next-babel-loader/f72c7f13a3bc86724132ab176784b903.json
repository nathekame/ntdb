{"ast":null,"code":"var _jsxFileName = \"/home/noa/ntdbProject/app/NTDB/components/auth/register.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport Cookie from 'js-cookie';\nimport jwtFuncs from '../../utility/jwt';\nimport Link from 'next/link';\nimport Validator from 'validatorjs';\nimport axiosFuncs from '../../utility/axios';\nimport localStorageFuncs from '../../utility/localStorage';\n\nconst Register = props => {\n  const router = useRouter();\n  const {\n    0: userReg,\n    1: setUserReg\n  } = useState({\n    email: '',\n    password: '',\n    cpassword: '',\n    fileNumber: ''\n  });\n  let rules = {\n    email: 'required|email',\n    password: 'required',\n    cpassword: 'required|same:password',\n    fileNumber: 'required'\n  };\n  let validation = new Validator(userReg, rules, {\n    required: 'required*'\n  });\n  validation.fails(); // true\n\n  validation.passes(); // false\n\n  const handleChange = e => {\n    setUserReg(_objectSpread({}, userReg, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"the current state before submit state \" + JSON.stringify(userReg));\n    const data = {\n      email: userReg.email,\n      password: userReg.password,\n      fileNumber: userReg.fileNumber\n    };\n    let api = await axiosFuncs.userRegister(data);\n    const token = api.data.userToken;\n    console.log(\"this is the status from the register\" + api.status);\n\n    if (api.data === \"error\") {\n      console.log(\"the log is error\");\n      router.push('/');\n    }\n\n    if (api.status === 201) {\n      console.log(\"the log is success\" + api.status);\n\n      if (token) {\n        Cookie.set(\"auth\", token);\n        localStorageFuncs.setItemInStorage(\"auth\", token);\n      }\n\n      router.push('/profile');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"pagegrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"innergrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    src: \"../../public/images/ubelogo.jpeg\",\n    alt: \"profilepic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \" Register \"), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"Email \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 62\n    }\n  }, validation.errors.get(\"email\"))), __jsx(\"input\", {\n    onChange: handleChange,\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"fileNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"File Number \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 73\n    }\n  }, validation.errors.get(\"fileNumber\"))), __jsx(\"input\", {\n    onChange: handleChange,\n    name: \"fileNumber\",\n    id: \"fileNumber\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Password \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 68\n    }\n  }, validation.errors.get(\"password\"))), __jsx(\"input\", {\n    onChange: handleChange,\n    name: \"password\",\n    id: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"cpassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Confirm Password \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 77\n    }\n  }, validation.errors.get(\"cpassword\"))), __jsx(\"input\", {\n    onChange: handleChange,\n    name: \"cpassword\",\n    id: \"cpassword\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }))), __jsx(\"div\", {\n    className: \"two-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 31\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"Already Registered?  \", __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 57\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 77\n    }\n  }, \"Login\")))), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, __jsx(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 34\n    }\n  }, \"submit\")))))));\n};\n\nexport default Register; //export default  withStyles(Register);","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/components/auth/register.js"],"names":["React","useState","useEffect","axios","useRouter","Cookie","jwtFuncs","Link","Validator","axiosFuncs","localStorageFuncs","Register","props","router","userReg","setUserReg","email","password","cpassword","fileNumber","rules","validation","required","fails","passes","handleChange","e","target","id","value","handleSubmit","preventDefault","console","log","JSON","stringify","data","api","userRegister","token","userToken","status","push","set","setItemInStorage","errors","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport axios from 'axios';\n\nimport { useRouter } from 'next/router'\n\nimport Cookie from 'js-cookie'\n\nimport jwtFuncs from '../../utility/jwt'\n\nimport Link from 'next/link'\n\nimport Validator from 'validatorjs';\nimport axiosFuncs from '../../utility/axios';\nimport localStorageFuncs from '../../utility/localStorage';\n\n\n\nconst Register = (props) => {\n\n      const router = useRouter()\n\n\n      const [userReg, setUserReg] = useState(\n          {\n            email: '',\n            password: '',\n            cpassword:'',\n            fileNumber:''\n          \n          }\n      );\n\n      let rules = {\n        email: 'required|email',\n        password: 'required',\n        cpassword: 'required|same:password',\n        fileNumber: 'required'\n      };\n      \n      let validation = new Validator(userReg, rules, { required: 'required*' });\n    \n      validation.fails(); // true\n      validation.passes(); // false\n\n\n    const  handleChange =(e) => {\n          setUserReg({ ...userReg, [e.target.id]: e.target.value })\n    \n      }\n      \n    const  handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n        console.log(\"the current state before submit state \"+JSON.stringify(userReg));\n\n        const data = {\n          email: userReg.email,\n          password: userReg.password,\n          fileNumber: userReg.fileNumber\n        }\n\n        \n        let api = await axiosFuncs.userRegister(data);\n        const token = api.data.userToken;\n        console.log(\"this is the status from the register\"+api.status);\n         if(api.data === \"error\" ){\n           console.log(\"the log is error\");\n           router.push('/');\n          }\n         if (api.status === 201) {\n           console.log(\"the log is success\"+api.status);\n              if(token){\n                Cookie.set(\"auth\", token);\n                localStorageFuncs.setItemInStorage(\"auth\", token);\n               }\n           router.push('/profile')\n           \n         }\n\n    }\n      \n\n        \n      return (\n\n        \n            <div className=\"pagegrid\">\n\n                  <div className=\"innergrid\">\n                      \n\n                        <form className=\"form\"  onSubmit={handleSubmit} >\n                            <div className=\"one-column-row\">\n                                <div className=\"column\">\n                                <img src=\"../../public/images/ubelogo.jpeg\" alt=\"profilepic\"/>\n                                </div>\n                          </div>\n                        <div className=\"grid\">\n                        <h1> Register </h1>\n                            <div className=\"one-column-row\">\n                                <div className=\"column\"> \n                                <label htmlFor=\"email\">Email <span className=\"fieldError\">{validation.errors.get(\"email\")}</span></label>\n                                <input onChange={handleChange}  name=\"email\" id=\"email\" type=\"email\" />\n                                </div>\n                                <div className=\"column\"> \n                                <label htmlFor=\"fileNumber\">File Number <span className=\"fieldError\">{validation.errors.get(\"fileNumber\")}</span></label>\n                                <input onChange={handleChange}  name=\"fileNumber\" id=\"fileNumber\" type=\"text\" />\n                                </div>\n                              \n                            \n                                <div className=\"column\"> \n                                <label htmlFor=\"password\">Password <span className=\"fieldError\">{validation.errors.get(\"password\")}</span></label>\n                                <input onChange={handleChange}  name=\"password\" id=\"password\" type=\"password\" />\n                                </div>\n                                <div className=\"column\"> \n                                <label htmlFor=\"cpassword\">Confirm Password <span className=\"fieldError\">{validation.errors.get(\"cpassword\")}</span></label>\n                                <input onChange={handleChange}  name=\"cpassword\" id=\"cpassword\" type=\"password\" />\n                                </div>\n                              \n                              </div>\n\n                              <div className=\"two-column-row\">\n                                <div className=\"column\"> \n                                <p>Already Registered?  <Link href=\"/login\"><a>Login</a></Link></p>\n                                </div>\n                                <div className=\"column\"> \n                                 <button className=\"button\">submit</button>\n                                </div>\n                              \n                              </div>\n                        </div>\n\n                                \n                        </form>\n\n                      \n                  </div>\n            </div>\n      )\n}\n\n\n\n\nexport default Register;\n\n\n//export default  withStyles(Register);\n"]},"metadata":{},"sourceType":"module"}