{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nconst rmLoginError = (state) => {\n    if (state.loginError){\n        delete state.loginError;\n    }\n        return\n}\n*/\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'TEST':\n      console.log('TESTING A NES CPMNTESTCNONONKN '); //    rmLoginError(state);\n      //    return {...state, userID:action.userDetails.userID, userToken: action.userDetails.userToken, isProfileComplete: action.userDetails.isProfileComplete };\n\n      return _objectSpread({}, state, {\n        jwt: action.userDetails.userID\n      });\n\n    case 'LOGIN':\n      console.log('login credentials', action.userDetails); //    rmLoginError(state);\n      //    return {...state, userID:action.userDetails.userID, userToken: action.userDetails.userToken, isProfileComplete: action.userDetails.isProfileComplete };\n\n      return _objectSpread({}, state, {\n        jwt: action.userDetails.userID\n      });\n\n    case 'LOGIN_FAILED':\n      console.log('login failed with this info', action.errDetail);\n      return _objectSpread({}, state, {\n        loginError: action.errDetail\n      });\n\n    case 'LOGOUT':\n      console.log('logout has been triggered');\n      return _objectSpread({}, state, {\n        userToken: null\n      });\n\n    case 'REGISTER':\n      console.log('this is the registration credentials', action.userDetails);\n      return _objectSpread({}, state, {\n        userID: action.userDetails.userID,\n        userToken: action.userDetails.userToken,\n        isProfileComplete: action.userDetails.isProfileComplete\n      });\n\n    default:\n      return _objectSpread({}, state, {\n        auth: \"testin jwt\"\n      });\n    //  return state\n  }\n};","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/store/reducers/authReducer.js"],"names":["authReducer","state","action","type","console","log","jwt","userDetails","userID","errDetail","loginError","userToken","isProfileComplete","auth"],"mappings":";;;;;;AAAA;;;;;;;;AAUA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,MAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EADJ,CAEA;AACA;;AACE,+BAAWJ,KAAX;AAAkBK,QAAAA,GAAG,EAACJ,MAAM,CAACK,WAAP,CAAmBC;AAAzC;;AACF,SAAK,OAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,MAAM,CAACK,WAAxC,EADJ,CAEA;AACA;;AACE,+BAAWN,KAAX;AAAkBK,QAAAA,GAAG,EAACJ,MAAM,CAACK,WAAP,CAAmBC;AAAzC;;AACF,SAAK,cAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,MAAM,CAACO,SAAlD;AACA,+BAAWR,KAAX;AAAkBS,QAAAA,UAAU,EAAER,MAAM,CAACO;AAArC;;AAEJ,SAAK,QAAL;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,+BAAWJ,KAAX;AAAmBU,QAAAA,SAAS,EAAE;AAA9B;;AACJ,SAAK,UAAL;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDH,MAAM,CAACK,WAA3D;AACI,+BAAWN,KAAX;AAAkBO,QAAAA,MAAM,EAACN,MAAM,CAACK,WAAP,CAAmBC,MAA5C;AAAoDG,QAAAA,SAAS,EAAET,MAAM,CAACK,WAAP,CAAmBI,SAAlF;AAA6FC,QAAAA,iBAAiB,EAAEV,MAAM,CAACK,WAAP,CAAmBK;AAAnI;;AAEJ;AACE,+BAAYX,KAAZ;AAAmBY,QAAAA,IAAI,EAAC;AAAxB;AACA;AAxBN;AA4BH,CA9BM","sourcesContent":["/*\nconst rmLoginError = (state) => {\n    if (state.loginError){\n        delete state.loginError;\n    }\n        return\n}\n*/\n\n\nexport const authReducer = (state, action) => {\n\n    switch(action.type){\n        case 'TEST':\n            console.log('TESTING A NES CPMNTESTCNONONKN ');\n        //    rmLoginError(state);\n        //    return {...state, userID:action.userDetails.userID, userToken: action.userDetails.userToken, isProfileComplete: action.userDetails.isProfileComplete };\n          return {...state, jwt:action.userDetails.userID };\n        case 'LOGIN':\n            console.log('login credentials', action.userDetails);\n        //    rmLoginError(state);\n        //    return {...state, userID:action.userDetails.userID, userToken: action.userDetails.userToken, isProfileComplete: action.userDetails.isProfileComplete };\n          return {...state, jwt:action.userDetails.userID };\n        case 'LOGIN_FAILED':\n            console.log('login failed with this info', action.errDetail);\n            return {...state, loginError: action.errDetail};\n\n        case 'LOGOUT':\n            console.log('logout has been triggered');\n            return {...state,  userToken: null};\n        case 'REGISTER':\n        console.log('this is the registration credentials', action.userDetails);\n            return {...state, userID:action.userDetails.userID, userToken: action.userDetails.userToken, isProfileComplete: action.userDetails.isProfileComplete };\n\n        default:\n          return  {...state, auth:\"testin jwt\" };\n          //  return state\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}