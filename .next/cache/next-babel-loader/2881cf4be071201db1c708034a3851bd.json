{"ast":null,"code":"var _jsxFileName = \"/home/noa/ntdbProject/app/NTDB/store/contexts/authContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { authReducer } from '../reducers/authReducer';\nexport const AuthContext = createContext();\nexport const AuthContextProvider = props => {\n  //     const state = {}\n  //     const { auth, dispatch } = useReducer( authReducer, state, localState )\n  //      const { auth, dispatch } = useReducer( authReducer, state )\n  const initialState = {};\n  const {\n    0: auth,\n    1: dispatchh\n  } = useReducer(authReducer, initialState);\n  /*     useEffect(() => {\n         //  localStorage.setItem('auth', JSON.stringify(auth))\n         return true\n       }, [auth]) */\n  //  console.log(\"this is the context from the client side \"+ localData);\n  //<AuthContext.Provider value={{auth, dispatch}}>\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      auth,\n      dispatchh\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, props.children);\n}; //export default AuthContextProvider;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/store/contexts/authContext.js"],"names":["React","createContext","useReducer","useEffect","authReducer","AuthContext","AuthContextProvider","props","initialState","auth","dispatchh","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAGP,OAAO,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAE3C;AAIA;AAEF;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAsBR,UAAU,CAAEE,WAAF,EAAeI,YAAf,CAAtC;AAEE;;;;AAKG;AAEN;;AAEY,SACI,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,QADX,CADJ;AAOX,CA5BM,C,CA8BP","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react'\nimport { authReducer } from '../reducers/authReducer';\n\n\nexport const AuthContext = createContext();\n\n\nexport const AuthContextProvider = (props) => {\n\n   //     const state = {}\n        \n\n\n   //     const { auth, dispatch } = useReducer( authReducer, state, localState )\n\n //      const { auth, dispatch } = useReducer( authReducer, state )\n const initialState = {}\n const [ auth, dispatchh ] = useReducer( authReducer, initialState )\n \n   /*     useEffect(() => {\n          //  localStorage.setItem('auth', JSON.stringify(auth))\n          return true\n        }, [auth]) */\n\n      //  console.log(\"this is the context from the client side \"+ localData);\n\n//<AuthContext.Provider value={{auth, dispatch}}>\n\n            return (\n                <AuthContext.Provider value={{auth, dispatchh}} >\n                    {props.children}\n                </AuthContext.Provider>\n            );       \n\n\n}\n\n//export default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}