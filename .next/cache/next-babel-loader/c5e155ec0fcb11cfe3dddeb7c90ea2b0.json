{"ast":null,"code":"var _jsxFileName = \"/home/noa/ntdbProject/app/NTDB/components/auth/login.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport Cookie from 'js-cookie';\nimport jwtFuncs from '../../utility/jwt';\nimport localStorageFuncs from '../../utility/localStorage';\nimport config from '../../config/config';\n\nconst Login = props => {\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    e.preventDefault();\n    setUser(_objectSpread({}, user, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"the current state before submit state \" + JSON.stringify(user));\n\n    const localJWT = () => {\n      const localCookie = Cookie.get('auth');\n      return localCookie ? localCookie : undefined; //    const localJWT = localStorage.getItem(\"jwt\");\n      //   return localJWT ? JSON.parse(localJWT) : '';\n    }; // connect to the db via axios and the dispatch an action based on the server response\n\n\n    const options = {\n      withCredentials: true,\n      headers: {\n        'Authorization': `Bearer ${localJWT}`\n      }\n    };\n    const url = config.apiUrl + 'login';\n    let apiCall = await axios.post(url, user);\n    console.log(\"API response \" + apiCall.data.userToken);\n    const token = apiCall.data.userToken;\n\n    if (token) {\n      Cookie.set(\"auth\", token);\n      localStorageFuncs.setItemInStorage(\"auth\", token); // decode the token and return the users details\n      //     let isProfileComplete = jwtFuncs.jwtProfile(token);\n      //  let isProfileComplete = '\"1\"'\n      //   console.log(\"this is the returned vaalue \"+ isProfileComplete);\n\n      router.push('/profile');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"pagegrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"innergrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }\n  }, __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/ubelogo.jpeg\",\n    alt: \"logo\",\n    height: \"200px\",\n    width: \"600px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \" Register \"))), __jsx(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Email \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 44\n    }\n  }, validation.errors.get(\"email\"))), __jsx(\"input\", {\n    onChange: handleChange,\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Password \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 50\n    }\n  }, validation.errors.get(\"password\"))), __jsx(\"input\", {\n    onChange: handleChange,\n    name: \"password\",\n    id: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: \"two-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Don't have an account?    \", __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 44\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 59\n    }\n  }, \"Register\")))), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }\n  }, \"submit\")))))));\n};\n\nexport default Login; //export default  withStyles(Login);","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/components/auth/login.js"],"names":["React","useState","Link","axios","useRouter","Cookie","jwtFuncs","localStorageFuncs","config","Login","props","router","user","setUser","email","password","handleChange","e","preventDefault","target","id","value","handleSubmit","console","log","JSON","stringify","localJWT","localCookie","get","undefined","options","withCredentials","headers","url","apiUrl","apiCall","post","data","userToken","token","set","setItemInStorage","push","validation","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Link from 'next/link'\n\nimport axios from 'axios';\n\nimport { useRouter } from 'next/router'\n\nimport Cookie from 'js-cookie'\n\nimport jwtFuncs from '../../utility/jwt'\nimport localStorageFuncs from '../../utility/localStorage';\nimport config from '../../config/config';\n\n\n\n\n\nconst Login = (props) => {\n\n      const router = useRouter()\n\n\n      const [user, setUser] = useState(\n          {\n            email: '',\n            password: ''\n          \n          }\n      );\n\n    const  handleChange =(e) => {\n\n      e.preventDefault();\n          setUser({ ...user, [e.target.id]: e.target.value })\n    \n      }\n      \n    const  handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n        console.log(\"the current state before submit state \"+JSON.stringify(user));\n\n        const localJWT = () => {\n\n          const localCookie = Cookie.get('auth'); \n\n          return localCookie ? localCookie : undefined;\n\n      //    const localJWT = localStorage.getItem(\"jwt\");\n       //   return localJWT ? JSON.parse(localJWT) : '';\n\n      }\n\n     // connect to the db via axios and the dispatch an action based on the server response\n\n      const options = {\n        withCredentials: true,\n        headers: {\n          'Authorization': `Bearer ${localJWT}`\n        }\n      } \n\n       const url = config.apiUrl+'login'\n\n       let apiCall = await axios.post(url, user);\n\n\n       console.log(\"API response \"+apiCall.data.userToken);\n\n       const token = apiCall.data.userToken;\n\n       if(token){\n\n            Cookie.set(\"auth\", token);\n\n            localStorageFuncs.setItemInStorage(\"auth\", token);\n\n          \n            // decode the token and return the users details\n\n      //     let isProfileComplete = jwtFuncs.jwtProfile(token);\n        //  let isProfileComplete = '\"1\"'\n\n         //   console.log(\"this is the returned vaalue \"+ isProfileComplete);\n   \n\n                router.push('/profile')\n  \n\n        }\n\n\n      }\n\n\n        \n      return (\n\n\n          <div className=\"pagegrid\">\n\n<div className=\"innergrid\">\n    \n\n      <form className=\"form\"  onSubmit={handleSubmit} >\n          <div className=\"one-column-row\">\n              <div className=\"column\">\n                <img src=\"/images/ubelogo.jpeg\" alt=\"logo\" height=\"200px\" width=\"600px\"/>\n              </div>\n              <div className=\"column\">\n                  <h1> Register </h1>\n              </div>\n        </div>\n      <div className=\"grid\">\n     \n          <div className=\"one-column-row\">\n              <div className=\"column\"> \n              <label htmlFor=\"email\">Email <span className=\"fieldError\">{validation.errors.get(\"email\")}</span></label>\n              <input onChange={handleChange}  name=\"email\" id=\"email\" type=\"email\" />\n              </div>\n           \n            \n          \n              <div className=\"column\"> \n              <label htmlFor=\"password\">Password <span className=\"fieldError\">{validation.errors.get(\"password\")}</span></label>\n              <input onChange={handleChange}  name=\"password\" id=\"password\" type=\"password\" />\n              </div>\n             \n            \n            </div>\n\n            <div className=\"two-column-row\">\n              <div className=\"column\"> \n              <p>Don't have an account?    <Link href=\"/\"><a>Register</a></Link></p>\n              </div>\n              <div className=\"column\"> \n               <button className=\"button\">submit</button>\n              </div>\n            \n            </div>\n      </div>\n\n              \n      </form>\n\n    \n</div>\n</div>\n\n\n\n\n\n\n      )\n}\n\n\n\n\nexport default Login;\n\n\n//export default  withStyles(Login);\n"]},"metadata":{},"sourceType":"module"}