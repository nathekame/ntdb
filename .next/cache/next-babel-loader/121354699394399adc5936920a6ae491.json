{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/noa/ntdbProject/app/NTDB/components/profile/paymentInformation.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ProfileContext } from '../../store/contexts/profileContext'; //import Navbar from '../../layouts/navbar'\n\nimport '../../public/assets/style.scss';\nimport Logout from '../../utility/logout';\nimport checkInLocalStorage from '../componentUtility/persistLocalToState';\nimport axiosFuncs from '../../utility/axios';\nimport Validator from 'validatorjs';\nimport Cookie from 'js-cookie';\nimport jwtFuncs from '../../utility/jwt';\nimport composeApiData from '../componentUtility/composeApiData'; //   const cropper = React.createRef(null);\n\nvar PaymentInformation = function PaymentInformation(props) {\n  //   const coVal = Cookie.get(\"auth\");\n  //   const profileStep = (cookie) => {\n  //       return cookie ? jwtFuncs.jwtProfileStep(cookie) : 1 \n  //   }\n  //   const sessionProStep = profileStep(coVal);\n  var _useContext = useContext(ProfileContext),\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState({\n    // prevProfileStep:3,\n    // nextProfileStep:5,\n    profileStep: 5,\n    bankName: checkInLocalStorage(\"paymentInformation\", \"bankName\"),\n    accountName: checkInLocalStorage(\"paymentInformation\", \"accountName\"),\n    accountNumber: checkInLocalStorage(\"paymentInformation\", \"accountNumber\"),\n    bvn: checkInLocalStorage(\"paymentInformation\", \"bvn\")\n  }),\n      paymentInformation = _useState[0],\n      setPaymentInformation = _useState[1];\n\n  var _useState2 = useState(true),\n      buttonStateF = _useState2[0],\n      setButtonStateF = _useState2[1];\n\n  var _useState3 = useState(false),\n      buttonStateB = _useState3[0],\n      setButtonStateB = _useState3[1];\n\n  var rules = {\n    bankName: 'required',\n    accountName: 'required',\n    accountNumber: 'required',\n    bvn: 'required' //  email: 'required|email',\n    //  age: 'min:18'\n\n  };\n  var validation = new Validator(paymentInformation, rules, {\n    required: 'required*'\n  });\n  validation.fails(); // true\n\n  validation.passes(); // false\n\n  useEffect(function () {\n    if (validation.passes()) {\n      setButtonStateF(false); // console.log(\"the   buttonStete \"+buttonState);  \n    } else {\n      setButtonStateF(true);\n    }\n  }, [paymentInformation]); //   useEffect(() => {\n  //         if (paymentInformation.profileStep === sessionProStep ) {\n  //                 setButtonStateB(true);\n  //               //  console.log(\"the   buttonStete \"+paymentInformation.profileStep);  \n  //           }else{\n  //                 setButtonStateB(false);\n  //       }\n  //   });\n\n  var handleChange = function handleChange(e) {\n    e.preventDefault();\n    setPaymentInformation(_objectSpread({}, paymentInformation, _defineProperty({}, e.target.id, e.target.value)));\n  };\n\n  var handleForward = function handleForward(e) {\n    var next, go;\n    return _regeneratorRuntime.async(function handleForward$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault(); //   dispatch({type: 'ADD_PROFILE_DATA', payload: paymentInformation});\n\n            if (!validation.passes()) {\n              _context.next = 10;\n              break;\n            }\n\n            dispatch({\n              type: 'ADD_PROFILE_DATA',\n              payload: {\n                paymentInformation: paymentInformation\n              }\n            });\n            next = \"F\";\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(props.updatestep(next));\n\n          case 6:\n            go = _context.sent;\n            dispatch({\n              type: 'CURRENT_STEP',\n              payload: paymentInformation.profileStep + 1\n            });\n\n            if (!go) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", go);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleBack = function handleBack(e) {\n    e.preventDefault();\n    var next = \"B\";\n    var go = props.updatestep(next);\n    dispatch({\n      type: 'CURRENT_STEP',\n      payload: paymentInformation.profileStep - 1\n    });\n\n    if (go) {\n      return go;\n    }\n  };\n\n  var handleSaveNow = function handleSaveNow(e) {\n    var data, dataToPost, api;\n    return _regeneratorRuntime.async(function handleSaveNow$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //  console.log(\"i am here to save first foitiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\n            e.preventDefault();\n            data = _objectSpread({}, paymentInformation, {\n              profileStep: paymentInformation.profileStep + 1\n            });\n\n            if (!validation.passes()) {\n              _context2.next = 11;\n              break;\n            }\n\n            dataToPost = composeApiData.composeFullProfileData(data);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axiosFuncs.profilePost(dataToPost));\n\n          case 6:\n            api = _context2.sent;\n\n            if (api.data === \"error\") {\n              console.log(\"the log is error\");\n            }\n\n            if (api.data === \"success\") {\n              console.log(\"the log is success\" + api.status); // router.push('/account')\n\n              dispatch({\n                type: 'CLEAR_CONTEXT'\n              });\n              Logout();\n            }\n\n            _context2.next = 13;\n            break;\n\n          case 11:\n            dispatch({\n              type: 'CLEAR_CONTEXT'\n            });\n            Logout();\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"pagegrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"innergrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"profile-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Payment Information 5\"), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"bankName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, \"Bank Name \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 57\n    }\n  }, validation.errors.get(\"bankName\"))), __jsx(\"select\", {\n    id: \"bankName\",\n    onChange: handleChange,\n    value: paymentInformation.bankName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }), __jsx(\"option\", {\n    value: \"UBA\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"UBA\"), __jsx(\"option\", {\n    value: \"GTB\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, \"GTB\"), __jsx(\"option\", {\n    value: \"FCMB\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"FCMB\")))), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"accountName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, \"Account Name   \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 65\n    }\n  }, validation.errors.get(\"accountName\"))), __jsx(\"input\", {\n    id: \"accountName\",\n    onChange: handleChange,\n    value: paymentInformation.accountName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"accountNumber\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Account Number   \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 69\n    }\n  }, validation.errors.get(\"accountNumber\"))), __jsx(\"input\", {\n    id: \"accountNumber\",\n    onChange: handleChange,\n    value: paymentInformation.accountNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"bvn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"Bank Verification Number(bvn)   \", __jsx(\"span\", {\n    className: \"fieldError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 74\n    }\n  }, validation.errors.get(\"bvn\"))), __jsx(\"input\", {\n    id: \"bvn\",\n    onChange: handleChange,\n    value: paymentInformation.bvn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"two-column-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    disabled: buttonStateB,\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 26\n    }\n  }, \"Back\")), __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    disabled: buttonStateF,\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleForward,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 26\n    }\n  }, \"Next\"))), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"column componentFooter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 26\n    }\n  }, \"5/6\"))))));\n};\n\nexport default PaymentInformation;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/components/profile/paymentInformation.js"],"names":["React","useState","useEffect","useContext","ProfileContext","Logout","checkInLocalStorage","axiosFuncs","Validator","Cookie","jwtFuncs","composeApiData","PaymentInformation","props","dispatch","profileStep","bankName","accountName","accountNumber","bvn","paymentInformation","setPaymentInformation","buttonStateF","setButtonStateF","buttonStateB","setButtonStateB","rules","validation","required","fails","passes","handleChange","e","preventDefault","target","id","value","handleForward","type","payload","next","updatestep","go","handleBack","handleSaveNow","data","dataToPost","composeFullProfileData","profilePost","api","console","log","status","errors","get"],"mappings":"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","sourcesContent":["import React, { useState,useEffect, useContext } from 'react'\n\nimport { ProfileContext } from '../../store/contexts/profileContext'\n\n//import Navbar from '../../layouts/navbar'\n\nimport '../../public/assets/style.scss';\nimport Logout from '../../utility/logout'\nimport checkInLocalStorage from '../componentUtility/persistLocalToState';\nimport axiosFuncs from '../../utility/axios';\n\nimport Validator from 'validatorjs';\nimport Cookie from 'js-cookie'\nimport jwtFuncs from '../../utility/jwt';\nimport composeApiData from '../componentUtility/composeApiData';\n\n\n //   const cropper = React.createRef(null);\n\nconst PaymentInformation = (props) => {\n\n//   const coVal = Cookie.get(\"auth\");\n \n//   const profileStep = (cookie) => {\n//       return cookie ? jwtFuncs.jwtProfileStep(cookie) : 1 \n//   }\n\n//   const sessionProStep = profileStep(coVal);\n\n\n\n\n\n\n const { dispatch } = useContext(ProfileContext);\n\n\n const [paymentInformation, setPaymentInformation] = useState(\n              {\n                // prevProfileStep:3,\n                // nextProfileStep:5,\n                profileStep:5,\n                bankName: checkInLocalStorage(\"paymentInformation\", \"bankName\"),\n                accountName:checkInLocalStorage(\"paymentInformation\", \"accountName\"),\n                accountNumber:checkInLocalStorage(\"paymentInformation\", \"accountNumber\"),\n                bvn: checkInLocalStorage(\"paymentInformation\", \"bvn\")\n \n\n              })\n\n\n\n  const [buttonStateF, setButtonStateF] = useState(true);\n  const [buttonStateB, setButtonStateB] = useState(false);\n                  \n  let rules = {\n\n    bankName: 'required',\n    accountName: 'required',\n    accountNumber: 'required',\n    bvn: 'required',\n   \n\n  //  email: 'required|email',\n  //  age: 'min:18'\n  };\n  \n  let validation = new Validator(paymentInformation, rules, { required: 'required*' });\n\n  validation.fails(); // true\n  validation.passes(); // false\n\n\n\n  useEffect(() => {\n\n            if (validation.passes()) {\n                    setButtonStateF(false);\n                  // console.log(\"the   buttonStete \"+buttonState);  \n              }else{\n                setButtonStateF(true);\n              \n          }\n      },[paymentInformation]);\n\n//   useEffect(() => {\n\n//         if (paymentInformation.profileStep === sessionProStep ) {\n//                 setButtonStateB(true);\n//               //  console.log(\"the   buttonStete \"+paymentInformation.profileStep);  \n//           }else{\n//                 setButtonStateB(false);\n          \n//       }\n//   });\n\n\nconst  handleChange =(e) => {\n                e.preventDefault(); \n                setPaymentInformation({ ...paymentInformation, [e.target.id]: e.target.value })\n            \n              }\n\n\nconst handleForward = async e => {\n\n   e.preventDefault();\n  //   dispatch({type: 'ADD_PROFILE_DATA', payload: paymentInformation});\n  if (validation.passes()) { \n     dispatch({type: 'ADD_PROFILE_DATA', payload: {paymentInformation: paymentInformation}});\n  \n     const next = \"F\"\n     const go = await props.updatestep(next);\n     dispatch({type: 'CURRENT_STEP', payload: paymentInformation.profileStep+1});\n     if(go){\n       return go\n     }\n  }\n \n\n}\n\nconst handleBack = e => {\n\n    e.preventDefault();\n\n    const next = \"B\"\n    const go = props.updatestep(next);\n    dispatch({type: 'CURRENT_STEP', payload: paymentInformation.profileStep-1});\n    if(go){\n\n      return go\n    }\n\n\n  \n}\n\n\nconst handleSaveNow = async e => {\n\n\n  //  console.log(\"i am here to save first foitiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\n  \n  e.preventDefault();\n  \n  const data =  {...paymentInformation,  profileStep: paymentInformation.profileStep+1};\n\n    \n  if (validation.passes()) {  \n      const dataToPost = composeApiData.composeFullProfileData(data);\n        let api = await axiosFuncs.profilePost(dataToPost);\n        if(api.data === \"error\" ){\n          console.log(\"the log is error\");\n        }\n        if (api.data === \"success\") {\n          console.log(\"the log is success\"+api.status);\n\n          // router.push('/account')\n          dispatch({type: 'CLEAR_CONTEXT'});\n          Logout();\n          \n        }\n     }else{\n        dispatch({type: 'CLEAR_CONTEXT'});\n        Logout();\n      }\n    //logout();\n  \n  }\n  \n\n\n\n\n  return (\n\n\n\n    <div className=\"pagegrid\">\n      {/* <Navbar /> */}\n\n        <div className=\"innergrid\">\n\n            <div className=\"profile-form\" >\n\n            <h3>Payment Information 5</h3>\n\n            <div className=\"one-column-row\">\n                <div className=\"column\">\n                    <label htmlFor=\"bankName\">Bank Name <span className=\"fieldError\">{validation.errors.get(\"bankName\")}</span></label>\n                    <select id='bankName' onChange={handleChange} value={paymentInformation.bankName} >\n                        <option value=\"\" />\n                        <option value={\"UBA\"}>UBA</option>\n                        <option value={\"GTB\"}>GTB</option>\n                        <option value={\"FCMB\"}>FCMB</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"accountName\">Account Name   <span className=\"fieldError\">{validation.errors.get(\"accountName\")}</span></label>               \n                    <input id=\"accountName\" onChange={handleChange} value={paymentInformation.accountName} />         \n                  </div>\n            </div>\n\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"accountNumber\">Account Number   <span className=\"fieldError\">{validation.errors.get(\"accountNumber\")}</span></label>               \n                    <input id=\"accountNumber\" onChange={handleChange} value={paymentInformation.accountNumber}/>               \n                  </div>\n            </div>\n\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                    <label htmlFor=\"bvn\">Bank Verification Number(bvn)   <span className=\"fieldError\">{validation.errors.get(\"bvn\")}</span></label>               \n                    <input id=\"bvn\" onChange={handleChange} value={paymentInformation.bvn} />               \n                  </div>\n            </div>\n\n\n\n\n\n\n\n\n\n            <div className=\"two-column-row\">\n                      <div className=\"column\">\n                         <button disabled={buttonStateB}  size=\"small\" color=\"primary\" onClick={handleBack}>Back</button>\n                      </div>\n                  \n                      <div className=\"column\">\n                         <button disabled={buttonStateF} size=\"small\" color=\"primary\" onClick={handleForward}>Next</button>\n                      </div>\n                  </div>\n\n                  <div className=\"one-column-row\">\n                      <div className=\"column componentFooter\">\n                         <span>5/6</span>\n                      </div>\n                  </div>\n\n            </div>\n        </div>\n    </div>\n\n\n\n  )\n\n}\n\n\nexport default PaymentInformation;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}