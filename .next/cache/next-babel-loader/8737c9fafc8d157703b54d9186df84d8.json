{"ast":null,"code":"var _jsxFileName = \"/home/noa/ntdbProject/app/NTDB/store/contexts/profileContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { profileReducer } from '../reducers/profileReducer';\nexport const ProfileContext = createContext();\n\nconst localStorageTest = () => {\n  var test = 'test';\n\n  try {\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst ProfileContextProvider = props => {\n  const initialState = {};\n\n  const localState = () => {\n    if (localStorageTest() === true) {\n      // available\n      const localData = localStorage.getItem(\"profile\");\n      return localData ? JSON.parse(localData) : initialState;\n    } else {\n      // unavailable\n      return initialState;\n    }\n  };\n\n  const {\n    0: profile,\n    1: dispatch\n  } = useReducer(profileReducer, initialState, localState); //   const [ profile, dispatch ] = useReducer( profileReducer, initialState )\n\n  useEffect(() => {\n    if (localStorageTest() == true) {\n      // available\n      localStorage.setItem('profile', JSON.stringify(profile));\n    }\n  }, [profile]);\n  return __jsx(ProfileContext.Provider, {\n    value: {\n      profile,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, props.children);\n};\n\nexport default ProfileContextProvider;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/store/contexts/profileContext.js"],"names":["React","createContext","useReducer","useEffect","profileReducer","ProfileContext","localStorageTest","test","localStorage","setItem","removeItem","e","ProfileContextProvider","props","initialState","localState","localData","getItem","JSON","parse","profile","dispatch","stringify","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAGA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,EAApC;;AAGP,MAAMK,gBAAgB,GAAE,MAAK;AACzB,MAAIC,IAAI,GAAG,MAAX;;AACA,MAAI;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBF,IAArB,EAA2BA,IAA3B;AACAC,IAAAA,YAAY,CAACE,UAAb,CAAwBH,IAAxB;AACA,WAAO,IAAP;AACH,GAJD,CAIE,OAAMI,CAAN,EAAS;AACP,WAAO,KAAP;AACH;AACJ,CATD;;AAaA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAElC,QAAMC,YAAY,GAAG,EAArB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AAErB,QAAGT,gBAAgB,OAAO,IAA1B,EAA+B;AAC3B;AAEA,YAAMU,SAAS,GAAGR,YAAY,CAACS,OAAb,CAAqB,SAArB,CAAlB;AAEA,aAAOD,SAAS,GAAGE,IAAI,CAACC,KAAL,CAAWH,SAAX,CAAH,GAA2BF,YAA3C;AACH,KAND,MAMK;AACD;AACA,aAAOA,YAAP;AACH;AAGJ,GAdD;;AAgBA,QAAM;AAAA,OAAEM,OAAF;AAAA,OAAWC;AAAX,MAAwBnB,UAAU,CAAEE,cAAF,EAAkBU,YAAlB,EAAgCC,UAAhC,CAAxC,CApBkC,CAqBrC;;AAEGZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,gBAAgB,MAAM,IAAzB,EAA8B;AAC1B;AAEAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCS,IAAI,CAACI,SAAL,CAAeF,OAAf,CAAhC;AAEH;AAEJ,GARQ,EAQN,CAACA,OAAD,CARM,CAAT;AAWI,SACI,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACA,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACU,QADX,CADJ;AAOX,CAzCD;;AA2CA,eAAeX,sBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react'\nimport { profileReducer } from '../reducers/profileReducer';\n\n\nexport const ProfileContext = createContext();\n\n\nconst localStorageTest =() =>{ \n    var test = 'test';\n    try {\n        localStorage.setItem(test, test);\n        localStorage.removeItem(test);\n        return true;\n    } catch(e) {\n        return false;\n    }\n}\n\n\n\nconst ProfileContextProvider = (props) => {\n\n        const initialState = { }\n\n        const localState = () => {\n\n            if(localStorageTest() === true){\n                // available\n                 \n                const localData = localStorage.getItem(\"profile\");\n\n                return localData ? JSON.parse(localData) : initialState;\n            }else{\n                // unavailable\n                return initialState\n            }\n           \n\n        }\n\n        const [ profile, dispatch ] = useReducer( profileReducer, initialState, localState )\n     //   const [ profile, dispatch ] = useReducer( profileReducer, initialState )\n\n        useEffect(() => {\n            if(localStorageTest() == true){\n                // available\n                 \n                localStorage.setItem('profile', JSON.stringify(profile))\n\n            }\n           \n        }, [profile])\n\n\n            return (\n                <ProfileContext.Provider value={{profile, dispatch}}>\n                    {props.children}\n                </ProfileContext.Provider>\n            );       \n\n\n}\n\nexport default ProfileContextProvider;"]},"metadata":{},"sourceType":"module"}