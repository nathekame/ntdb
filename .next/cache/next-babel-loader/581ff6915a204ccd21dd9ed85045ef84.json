{"ast":null,"code":"var _jsxFileName = \"/home/noa/ntdbProject/app/NTDB/components/profile/profilePic.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from 'react';\nimport { ProfileContext } from '../../store/contexts/profileContext'; //import Navbar from '../../layouts/navbar'\n\nimport '../../public/assets/style.scss';\nimport Logout from '../../utility/logout';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { base64StringtoFile, extractImageFileExtensionFromBase64, image64toCanvasRef } from './fileUtility';\nimport axiosFuncs from '../../utility/axios'; //   const cropper = React.createRef(null);\n\nconst ProfilePic = props => {\n  const {\n    dispatch\n  } = useContext(ProfileContext);\n  const imagePreviewCanvasRef = React.createRef();\n  const {\n    0: profilePic,\n    1: setProfilePic\n  } = useState({\n    profileStep: 7,\n    profilePicUrl: '',\n    profilePicFile: '',\n    crop: {\n      // unit: 'px',\n      aspect: 1 / 1 //    width: 50,\n\n    }\n  });\n  const {\n    0: buttonStateF,\n    1: setButtonStateF\n  } = useState(true);\n  const {\n    0: buttonStateB,\n    1: setButtonStateB\n  } = useState(false);\n  let rules = {\n    profilePicUrl: 'required',\n    profilePicFile: 'required' //  email: 'required|email',\n    //  age: 'min:18'\n\n  };\n  let validation = new Validator(paymentInformation, rules, {\n    required: 'required*'\n  });\n  validation.fails(); // true\n\n  validation.passes(); // false\n\n  useEffect(() => {\n    if (validation.passes()) {\n      setButtonStateF(false); // console.log(\"the   buttonStete \"+buttonState);  \n    } else {\n      setButtonStateF(true);\n    }\n  }, [profilePic]);\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let profilePicFile = e.target.files[0]; //   console.log(\"this is the imagfe check view ===================>>>>>>>>>>>>>\" +profilePicFile);\n\n    reader.onloadend = () => {\n      setProfilePic(_objectSpread({}, profilePic, {\n        profilePicFile: profilePicFile,\n        profilePicUrl: reader.result\n      }));\n    };\n\n    reader.readAsDataURL(profilePicFile);\n  }; // from here\n\n\n  const handleCrop = (crop, percentCrop) => {\n    console.log(\"this is the crop \" + JSON.stringify(crop));\n    console.log(\"this is the percent crop \" + JSON.stringify(percentCrop)); //onComplete(crop, percentCrop)\n\n    setProfilePic(_objectSpread({}, profilePic, {\n      crop: percentCrop\n    }));\n  };\n\n  const handleImageLoaded = image => {\n    console.log(\"the image that is loaded\" + image);\n  };\n\n  const handleCompleteCrop = (crop, pixelCrop) => {\n    console.log(\"the crop and the pixel \" + JSON.stringify(crop) + JSON.stringify(pixelCrop));\n    const canvasRef = imagePreviewCanvasRef.current;\n    const imgSrc = profilePic.profilePicUrl;\n    image64toCanvasRef(canvasRef, imgSrc, crop);\n  }; // save the successfully cropped image to state \n\n\n  const handleImageSaveWithCrop = e => {\n    e.preventDefault();\n    const canvasRef = imagePreviewCanvasRef.current;\n    const imgSrc = profilePic.profilePicUrl;\n    const fileExtension = extractImageFileExtensionFromBase64(imgSrc);\n    const imageDate64 = canvasRef.toDataURL('image/' + fileExtension);\n    console.log(\"the profilePicFile extension is this ===>> \" + fileExtension);\n    const newFileName = \"nomalevo.\" + fileExtension;\n    console.log(\"the new profilePicFile name \" + newFileName); // profilePicFile to be uploaded\n\n    const newCroppedFile = base64StringtoFile(imageDate64, newFileName); //   console.log(\"this si the final cropped \"+JSON.stringify(newCroppedFile));\n    //  console.log(\"this is the imagfe check view cropped profilePicFile ===================>>>>>>>>>>>>>\" +newCroppedFile);\n\n    setProfilePic(_objectSpread({}, profilePic, {\n      profilePicFile: newCroppedFile\n    }));\n    const stateObj = {\n      profileStep: 8,\n      profilePicUrl: profilePic.profilePicUrl,\n      profilePicFile: newCroppedFile\n    }; //     this.props.fileStateUpdate(profilePic);\n    //props.fileStateUpdate(stateObj);\n    //download the profilePicFile\n    // downloadBase64File(imageDate64, newFileName)\n  }; // save the image  to state without cropping it\n\n\n  const handleImageSaveWithoutCrop = e => {\n    e.preventDefault(); // setProfilePic({ ...profilePic, profilePicFile: newCroppedFile })  \n    // this.setState({\n    //   profileStep: 8\n    //  // profilePicFile: newCroppedFile   \n    //   })\n    //   const stateObj = {\n    //     profileStep:8,\n    //     profilePicUrl: profilePic.profilePicUrl,\n    //     profilePicFile: profilePic.profilePicFile,\n    //   }\n    //   //   this.props.fileStateUpdate(profilePicj);\n    // this.props.fileStateUpdate(stateObj);\n  };\n\n  const checkToSkipCrop = () => {\n    if (profilePic.profilePicUrl) {\n      return \"inline\";\n    } else {\n      return \"none\";\n    }\n  };\n\n  const checkToUpladCropped = () => {\n    if (profilePic.crop.height) {\n      return \"inline\";\n    } else {\n      return \"none\";\n    }\n  };\n\n  const styles = {\n    // height: '50vh',\n    //   minHeight: '93vh'\n    width: \"200\",\n    height: \"500\"\n  };\n  const conStyle = {\n    // height: '50vh',\n    //   minHeight: '93vh'\n    //   display:\"inline\"\n    cropped: {\n      display: checkToUpladCropped()\n    },\n    notCropped: {\n      display: checkToSkipCrop()\n    }\n  }; // to here\n  // const  handleChange =(e) => {\n  //         e.preventDefault(); \n  //         setProfilePic({ ...profilePic, [e.target.id]: e.target.value })\n  //       }\n\n  const handleForward = async e => {\n    e.preventDefault(); //   dispatch({type: 'ADD_PROFILE_DATA', payload: profilePic});\n\n    dispatch({\n      type: 'ADD_PROFILE_DATA',\n      payload: {\n        profilePic: profilePic\n      }\n    });\n    const next = \"F\";\n    const go = await props.updatestep(next);\n    dispatch({\n      type: 'CURRENT_STEP',\n      payload: profilePic.profileStep + 1\n    });\n\n    if (go) {\n      return go;\n    }\n  };\n\n  const handleBack = async e => {\n    e.preventDefault();\n    const next = \"B\";\n    const go = await props.updatestep(next);\n    dispatch({\n      type: 'CURRENT_STEP',\n      payload: profilePic.profileStep - 1\n    });\n\n    if (go) {\n      return go;\n    }\n  };\n\n  const handleSaveNow = async e => {\n    //  console.log(\"i am here to save first foitiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\n    e.preventDefault(); // const data =  {...profilePic,  profileStep: profilePic.profileStep+1};\n\n    dispatch({\n      type: 'CLEAR_CONTEXT'\n    });\n    Logout(); //logout();\n  };\n\n  return __jsx(\"div\", {\n    className: \"pagegrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"innergrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"profile-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"Profile Pic\"), __jsx(\"div\", {\n    className: \"one-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    style: conStyle.notCropped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Drag you mouse over the image to crop or click the button below to skip\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"profilePic\",\n    onChange: e => handleImageChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"two-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, __jsx(ReactCrop, {\n    src: profilePic.profilePicUrl,\n    onImageLoaded: handleImageLoaded,\n    onComplete: handleCompleteCrop,\n    circularCrop: \"true\",\n    crop: profilePic.crop,\n    onChange: handleCrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }), __jsx(\"button\", {\n    style: conStyle.notCropped,\n    onClick: handleImageSaveWithoutCrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 23\n    }\n  }, \" Skip Cropping And Upload Image \")), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }\n  }, __jsx(\"canvas\", {\n    ref: imagePreviewCanvasRef,\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    style: conStyle.cropped,\n    onClick: handleImageSaveWithCrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, \" Upload  Cropped Image \"))), __jsx(\"div\", {\n    className: \"three-column-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    variant: \"outlined\",\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 26\n    }\n  }, \" Back \")), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleSaveNow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 26\n    }\n  }, \"Save And Logout\")), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 23\n    }\n  }, __jsx(\"button\", {\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 26\n    }\n  }, \"Next\"))))));\n};\n\nexport default ProfilePic;","map":{"version":3,"sources":["/home/noa/ntdbProject/app/NTDB/components/profile/profilePic.js"],"names":["React","useState","useContext","ProfileContext","Logout","ReactCrop","base64StringtoFile","extractImageFileExtensionFromBase64","image64toCanvasRef","axiosFuncs","ProfilePic","props","dispatch","imagePreviewCanvasRef","createRef","profilePic","setProfilePic","profileStep","profilePicUrl","profilePicFile","crop","aspect","buttonStateF","setButtonStateF","buttonStateB","setButtonStateB","rules","validation","Validator","paymentInformation","required","fails","passes","useEffect","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","handleCrop","percentCrop","console","log","JSON","stringify","handleImageLoaded","image","handleCompleteCrop","pixelCrop","canvasRef","current","imgSrc","handleImageSaveWithCrop","fileExtension","imageDate64","toDataURL","newFileName","newCroppedFile","stateObj","handleImageSaveWithoutCrop","checkToSkipCrop","checkToUpladCropped","height","styles","width","conStyle","cropped","display","notCropped","handleForward","type","payload","next","go","updatestep","handleBack","handleSaveNow"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\n\nimport { ProfileContext } from '../../store/contexts/profileContext'\n\n//import Navbar from '../../layouts/navbar'\n\nimport '../../public/assets/style.scss';\n\nimport Logout from '../../utility/logout'\n\n\nimport ReactCrop from 'react-image-crop'\n\nimport 'react-image-crop/dist/ReactCrop.css';\n\n\nimport  { base64StringtoFile,  extractImageFileExtensionFromBase64, image64toCanvasRef} from './fileUtility'\nimport axiosFuncs from '../../utility/axios';\n\n\n\n\n //   const cropper = React.createRef(null);\n\nconst ProfilePic = (props) => {\n\n\n\n      const { dispatch  } = useContext(ProfileContext);\n\n      const imagePreviewCanvasRef = React.createRef();\n\n      const [profilePic, setProfilePic] = useState(\n              {\n    \n                profileStep: 7,\n                profilePicUrl: '',\n                profilePicFile: '',\n                crop: {\n                // unit: 'px',\n                  aspect: 1 / 1 ,\n              //    width: 50,\n                } \n\n\n              })\n\n  const [buttonStateF, setButtonStateF] = useState(true);\n  const [buttonStateB, setButtonStateB] = useState(false);\n                  \n  let rules = {\n\n    profilePicUrl: 'required',\n    profilePicFile: 'required',\n   \n\n  //  email: 'required|email',\n  //  age: 'min:18'\n  };\n  \n  let validation = new Validator(paymentInformation, rules, { required: 'required*' });\n\n  validation.fails(); // true\n  validation.passes(); // false\n\n\n\n\n  useEffect(() => {\n\n    if (validation.passes()) {\n            setButtonStateF(false);\n          // console.log(\"the   buttonStete \"+buttonState);  \n      }else{\n        setButtonStateF(true);\n      \n  }\n},[profilePic]);\n\n\n  const handleImageChange = (e) => {\n            e.preventDefault();\n\n            let reader = new FileReader();\n            let profilePicFile = e.target.files[0];\n\n        //   console.log(\"this is the imagfe check view ===================>>>>>>>>>>>>>\" +profilePicFile);\n\n            reader.onloadend = () => {\n                setProfilePic({ ...profilePic, profilePicFile: profilePicFile, profilePicUrl: reader.result })  \n            }\n\n            reader.readAsDataURL(profilePicFile)\n          }\n// from here\n\n\n\nconst handleCrop = (crop, percentCrop) => {\n\n  console.log(\"this is the crop \"+JSON.stringify(crop));\n\n  console.log(\"this is the percent crop \"+JSON.stringify(percentCrop));\n\n\n  //onComplete(crop, percentCrop)\n  setProfilePic({ ...profilePic,  crop: percentCrop })  \n\n}\n\nconst handleImageLoaded = (image) => {\n\n            console.log(\"the image that is loaded\"+image);\n          \n          }\n          \nconst handleCompleteCrop = (crop, pixelCrop) => {\n\n console.log(\"the crop and the pixel \"+JSON.stringify(crop) + JSON.stringify(pixelCrop));\n\n  const canvasRef = imagePreviewCanvasRef.current\n\n  const imgSrc = profilePic.profilePicUrl\n\n  image64toCanvasRef(canvasRef, imgSrc, crop)\n\n}\n\n\n// save the successfully cropped image to state \nconst handleImageSaveWithCrop = (e) => {\n\n  e.preventDefault();\n\n  const canvasRef = imagePreviewCanvasRef.current\n  const imgSrc = profilePic.profilePicUrl\n  const fileExtension = extractImageFileExtensionFromBase64(imgSrc)\n  const imageDate64 = canvasRef.toDataURL('image/'+ fileExtension)\n\n  console.log(\"the profilePicFile extension is this ===>> \"+fileExtension);\n\n  const newFileName = \"nomalevo.\" + fileExtension\n\n  console.log(\"the new profilePicFile name \"+newFileName);\n\n  // profilePicFile to be uploaded\n  const newCroppedFile = base64StringtoFile(imageDate64, newFileName)\n\n//   console.log(\"this si the final cropped \"+JSON.stringify(newCroppedFile));\n\n//  console.log(\"this is the imagfe check view cropped profilePicFile ===================>>>>>>>>>>>>>\" +newCroppedFile);\n     setProfilePic({ ...profilePic, profilePicFile: newCroppedFile })  \n\n\n\n  const stateObj = {\n      profileStep:8,\n      profilePicUrl: profilePic.profilePicUrl,\n      profilePicFile: newCroppedFile\n\n    }\n\n//     this.props.fileStateUpdate(profilePic);\n\n\n  //props.fileStateUpdate(stateObj);\n\n\n   //download the profilePicFile\n// downloadBase64File(imageDate64, newFileName)\n\n\n\n\n\n\n}\n\n\n\n// save the image  to state without cropping it\nconst handleImageSaveWithoutCrop = (e) => {\n  e.preventDefault();\n\n  // setProfilePic({ ...profilePic, profilePicFile: newCroppedFile })  \n\n  // this.setState({\n  //   profileStep: 8\n  //  // profilePicFile: newCroppedFile   \n  //   })\n\n  //   const stateObj = {\n  //     profileStep:8,\n  //     profilePicUrl: profilePic.profilePicUrl,\n  //     profilePicFile: profilePic.profilePicFile,\n\n  //   }\n  //   //   this.props.fileStateUpdate(profilePicj);\n\n\n  // this.props.fileStateUpdate(stateObj);\n\n\n\n}\n\n\n\n\nconst checkToSkipCrop = () => {\n\n  if(profilePic.profilePicUrl){\n    return \"inline\"\n  } else {\n    return \"none\"\n  }\n  \n\n}\n\n\nconst checkToUpladCropped = () => {\n\n  if(profilePic.crop.height){\n    return \"inline\"\n  } else {\n    return \"none\"\n  }\n\n}\n\nconst styles = {\n  // height: '50vh',\n  //   minHeight: '93vh'\n    width:\"200\" ,\n   height:\"500\"\n  }\n\nconst conStyle = {\n    // height: '50vh',\n    //   minHeight: '93vh'\n   //   display:\"inline\"\n   cropped : { display: checkToUpladCropped() },\n   notCropped : { display: checkToSkipCrop() }\n      \n    }\n\n\n// to here\n\n// const  handleChange =(e) => {\n//         e.preventDefault(); \n//         setProfilePic({ ...profilePic, [e.target.id]: e.target.value })\n\n//       }\n\n\nconst handleForward = async e => {\n\n        e.preventDefault();\n        //   dispatch({type: 'ADD_PROFILE_DATA', payload: profilePic});\n        dispatch({type: 'ADD_PROFILE_DATA', payload: {profilePic: profilePic}});\n\n        const next = \"F\"\n        const go = await props.updatestep(next);\n        dispatch({type: 'CURRENT_STEP', payload: profilePic.profileStep+1});\n        if(go){\n        return go\n        }\n\n        }\n\nconst handleBack = async e => {\n\n        e.preventDefault();\n\n        const next = \"B\"\n        const go = await props.updatestep(next);\n        dispatch({type: 'CURRENT_STEP', payload: profilePic.profileStep-1});\n        if(go){\n\n        return go\n        }\n\n        }\n\n\nconst handleSaveNow = async e => {\n\n\n      //  console.log(\"i am here to save first foitiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\n\n      e.preventDefault();\n\n      // const data =  {...profilePic,  profileStep: profilePic.profileStep+1};\n      \n\n\n      dispatch({type: 'CLEAR_CONTEXT'});\n      Logout();\n\n      //logout();\n\n      }\n\n \n\n\n  return (\n\n\n\n    <div className=\"pagegrid\">\n      {/* <Navbar /> */}\n\n        <div className=\"innergrid\">\n\n            <div className=\"profile-form\" >\n\n            <h3>Profile Pic</h3>\n\n\n            <div className=\"one-column-row\">\n                  <div className=\"column\">\n                                      \n                    <div style={conStyle.notCropped} >Drag you mouse over the image to crop or click the button below to skip</div>\n                    <input  type='file' id=\"profilePic\" onChange={(e)=>handleImageChange(e)} />\n                 \n                      \n                  </div>\n            </div>\n\n            <div className=\"two-column-row\">\n                  <div className=\"column\">\n                                      \n                      <ReactCrop \n                      src={profilePic.profilePicUrl}\n                      onImageLoaded={handleImageLoaded}\n                      onComplete={handleCompleteCrop} \n                      circularCrop=\"true\"\n                      crop={profilePic.crop} \n                      onChange={handleCrop} />\n\n                      <button style={conStyle.notCropped} onClick={handleImageSaveWithoutCrop}> Skip Cropping And Upload Image </button>\n\n              \n                  </div>\n                  <div className=\"column\">\n                    <canvas ref={imagePreviewCanvasRef} style={styles} ></canvas> \n                    <button  style={conStyle.cropped} onClick={handleImageSaveWithCrop}> Upload  Cropped Image </button>\n        \n                  </div>\n            </div>\n\n\n\n\n\n            <div className=\"three-column-row\">\n                      <div className=\"column\">\n                         <button variant=\"outlined\"   size=\"small\" color=\"primary\" onClick={handleBack}>\tBack </button>\n                      </div>\n                      <div className=\"column\">\n                         <button  size=\"small\" color=\"primary\" onClick={handleSaveNow}>Save And Logout</button>\n                      </div>\n                      <div className=\"column\">\n                         <button size=\"small\" color=\"primary\" onClick={handleForward}>Next</button>\n                      </div>\n                  </div>\n\n            </div>\n        </div>\n    </div>\n\n\n\n  )\n}\n\n\nexport default ProfilePic;\n\n\n"]},"metadata":{},"sourceType":"module"}